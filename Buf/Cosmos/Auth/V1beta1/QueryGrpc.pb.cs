// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmos/auth/v1beta1/query.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cosmos.Auth.V1beta1 {
  /// <summary>
  /// Query defines the gRPC querier service.
  /// </summary>
  public static partial class Query
  {
    static readonly string __ServiceName = "cosmos.auth.v1beta1.Query";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryAccountsRequest> __Marshaller_cosmos_auth_v1beta1_QueryAccountsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryAccountsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryAccountsResponse> __Marshaller_cosmos_auth_v1beta1_QueryAccountsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryAccountsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryAccountRequest> __Marshaller_cosmos_auth_v1beta1_QueryAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryAccountResponse> __Marshaller_cosmos_auth_v1beta1_QueryAccountResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryAccountResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDRequest> __Marshaller_cosmos_auth_v1beta1_QueryAccountAddressByIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDResponse> __Marshaller_cosmos_auth_v1beta1_QueryAccountAddressByIDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryParamsRequest> __Marshaller_cosmos_auth_v1beta1_QueryParamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryParamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryParamsResponse> __Marshaller_cosmos_auth_v1beta1_QueryParamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryParamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryModuleAccountsRequest> __Marshaller_cosmos_auth_v1beta1_QueryModuleAccountsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryModuleAccountsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryModuleAccountsResponse> __Marshaller_cosmos_auth_v1beta1_QueryModuleAccountsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryModuleAccountsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameRequest> __Marshaller_cosmos_auth_v1beta1_QueryModuleAccountByNameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameResponse> __Marshaller_cosmos_auth_v1beta1_QueryModuleAccountByNameResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.Bech32PrefixRequest> __Marshaller_cosmos_auth_v1beta1_Bech32PrefixRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.Bech32PrefixRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.Bech32PrefixResponse> __Marshaller_cosmos_auth_v1beta1_Bech32PrefixResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.Bech32PrefixResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.AddressBytesToStringRequest> __Marshaller_cosmos_auth_v1beta1_AddressBytesToStringRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.AddressBytesToStringRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.AddressBytesToStringResponse> __Marshaller_cosmos_auth_v1beta1_AddressBytesToStringResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.AddressBytesToStringResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.AddressStringToBytesRequest> __Marshaller_cosmos_auth_v1beta1_AddressStringToBytesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.AddressStringToBytesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.AddressStringToBytesResponse> __Marshaller_cosmos_auth_v1beta1_AddressStringToBytesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.AddressStringToBytesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryAccountInfoRequest> __Marshaller_cosmos_auth_v1beta1_QueryAccountInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryAccountInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Auth.V1beta1.QueryAccountInfoResponse> __Marshaller_cosmos_auth_v1beta1_QueryAccountInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Auth.V1beta1.QueryAccountInfoResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Auth.V1beta1.QueryAccountsRequest, global::Cosmos.Auth.V1beta1.QueryAccountsResponse> __Method_Accounts = new grpc::Method<global::Cosmos.Auth.V1beta1.QueryAccountsRequest, global::Cosmos.Auth.V1beta1.QueryAccountsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Accounts",
        __Marshaller_cosmos_auth_v1beta1_QueryAccountsRequest,
        __Marshaller_cosmos_auth_v1beta1_QueryAccountsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Auth.V1beta1.QueryAccountRequest, global::Cosmos.Auth.V1beta1.QueryAccountResponse> __Method_Account = new grpc::Method<global::Cosmos.Auth.V1beta1.QueryAccountRequest, global::Cosmos.Auth.V1beta1.QueryAccountResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Account",
        __Marshaller_cosmos_auth_v1beta1_QueryAccountRequest,
        __Marshaller_cosmos_auth_v1beta1_QueryAccountResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDRequest, global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDResponse> __Method_AccountAddressByID = new grpc::Method<global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDRequest, global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AccountAddressByID",
        __Marshaller_cosmos_auth_v1beta1_QueryAccountAddressByIDRequest,
        __Marshaller_cosmos_auth_v1beta1_QueryAccountAddressByIDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Auth.V1beta1.QueryParamsRequest, global::Cosmos.Auth.V1beta1.QueryParamsResponse> __Method_Params = new grpc::Method<global::Cosmos.Auth.V1beta1.QueryParamsRequest, global::Cosmos.Auth.V1beta1.QueryParamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Params",
        __Marshaller_cosmos_auth_v1beta1_QueryParamsRequest,
        __Marshaller_cosmos_auth_v1beta1_QueryParamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Auth.V1beta1.QueryModuleAccountsRequest, global::Cosmos.Auth.V1beta1.QueryModuleAccountsResponse> __Method_ModuleAccounts = new grpc::Method<global::Cosmos.Auth.V1beta1.QueryModuleAccountsRequest, global::Cosmos.Auth.V1beta1.QueryModuleAccountsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ModuleAccounts",
        __Marshaller_cosmos_auth_v1beta1_QueryModuleAccountsRequest,
        __Marshaller_cosmos_auth_v1beta1_QueryModuleAccountsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameRequest, global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameResponse> __Method_ModuleAccountByName = new grpc::Method<global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameRequest, global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ModuleAccountByName",
        __Marshaller_cosmos_auth_v1beta1_QueryModuleAccountByNameRequest,
        __Marshaller_cosmos_auth_v1beta1_QueryModuleAccountByNameResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Auth.V1beta1.Bech32PrefixRequest, global::Cosmos.Auth.V1beta1.Bech32PrefixResponse> __Method_Bech32Prefix = new grpc::Method<global::Cosmos.Auth.V1beta1.Bech32PrefixRequest, global::Cosmos.Auth.V1beta1.Bech32PrefixResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Bech32Prefix",
        __Marshaller_cosmos_auth_v1beta1_Bech32PrefixRequest,
        __Marshaller_cosmos_auth_v1beta1_Bech32PrefixResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Auth.V1beta1.AddressBytesToStringRequest, global::Cosmos.Auth.V1beta1.AddressBytesToStringResponse> __Method_AddressBytesToString = new grpc::Method<global::Cosmos.Auth.V1beta1.AddressBytesToStringRequest, global::Cosmos.Auth.V1beta1.AddressBytesToStringResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddressBytesToString",
        __Marshaller_cosmos_auth_v1beta1_AddressBytesToStringRequest,
        __Marshaller_cosmos_auth_v1beta1_AddressBytesToStringResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Auth.V1beta1.AddressStringToBytesRequest, global::Cosmos.Auth.V1beta1.AddressStringToBytesResponse> __Method_AddressStringToBytes = new grpc::Method<global::Cosmos.Auth.V1beta1.AddressStringToBytesRequest, global::Cosmos.Auth.V1beta1.AddressStringToBytesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddressStringToBytes",
        __Marshaller_cosmos_auth_v1beta1_AddressStringToBytesRequest,
        __Marshaller_cosmos_auth_v1beta1_AddressStringToBytesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Auth.V1beta1.QueryAccountInfoRequest, global::Cosmos.Auth.V1beta1.QueryAccountInfoResponse> __Method_AccountInfo = new grpc::Method<global::Cosmos.Auth.V1beta1.QueryAccountInfoRequest, global::Cosmos.Auth.V1beta1.QueryAccountInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AccountInfo",
        __Marshaller_cosmos_auth_v1beta1_QueryAccountInfoRequest,
        __Marshaller_cosmos_auth_v1beta1_QueryAccountInfoResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cosmos.Auth.V1beta1.QueryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Query</summary>
    public partial class QueryClient : grpc::ClientBase<QueryClient>
    {
      /// <summary>Creates a new client for Query</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Query that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Accounts returns all the existing accounts.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      ///
      /// Since: cosmos-sdk 0.43
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryAccountsResponse Accounts(global::Cosmos.Auth.V1beta1.QueryAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Accounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Accounts returns all the existing accounts.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      ///
      /// Since: cosmos-sdk 0.43
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryAccountsResponse Accounts(global::Cosmos.Auth.V1beta1.QueryAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Accounts, null, options, request);
      }
      /// <summary>
      /// Accounts returns all the existing accounts.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      ///
      /// Since: cosmos-sdk 0.43
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryAccountsResponse> AccountsAsync(global::Cosmos.Auth.V1beta1.QueryAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Accounts returns all the existing accounts.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      ///
      /// Since: cosmos-sdk 0.43
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryAccountsResponse> AccountsAsync(global::Cosmos.Auth.V1beta1.QueryAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Accounts, null, options, request);
      }
      /// <summary>
      /// Account returns account details based on address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryAccountResponse Account(global::Cosmos.Auth.V1beta1.QueryAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Account(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Account returns account details based on address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryAccountResponse Account(global::Cosmos.Auth.V1beta1.QueryAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Account, null, options, request);
      }
      /// <summary>
      /// Account returns account details based on address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryAccountResponse> AccountAsync(global::Cosmos.Auth.V1beta1.QueryAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Account returns account details based on address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryAccountResponse> AccountAsync(global::Cosmos.Auth.V1beta1.QueryAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Account, null, options, request);
      }
      /// <summary>
      /// AccountAddressByID returns account address based on account number.
      ///
      /// Since: cosmos-sdk 0.46.2
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDResponse AccountAddressByID(global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccountAddressByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AccountAddressByID returns account address based on account number.
      ///
      /// Since: cosmos-sdk 0.46.2
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDResponse AccountAddressByID(global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AccountAddressByID, null, options, request);
      }
      /// <summary>
      /// AccountAddressByID returns account address based on account number.
      ///
      /// Since: cosmos-sdk 0.46.2
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDResponse> AccountAddressByIDAsync(global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccountAddressByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AccountAddressByID returns account address based on account number.
      ///
      /// Since: cosmos-sdk 0.46.2
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDResponse> AccountAddressByIDAsync(global::Cosmos.Auth.V1beta1.QueryAccountAddressByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AccountAddressByID, null, options, request);
      }
      /// <summary>
      /// Params queries all parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryParamsResponse Params(global::Cosmos.Auth.V1beta1.QueryParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Params(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Params queries all parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryParamsResponse Params(global::Cosmos.Auth.V1beta1.QueryParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Params, null, options, request);
      }
      /// <summary>
      /// Params queries all parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryParamsResponse> ParamsAsync(global::Cosmos.Auth.V1beta1.QueryParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ParamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Params queries all parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryParamsResponse> ParamsAsync(global::Cosmos.Auth.V1beta1.QueryParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Params, null, options, request);
      }
      /// <summary>
      /// ModuleAccounts returns all the existing module accounts.
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryModuleAccountsResponse ModuleAccounts(global::Cosmos.Auth.V1beta1.QueryModuleAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModuleAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ModuleAccounts returns all the existing module accounts.
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryModuleAccountsResponse ModuleAccounts(global::Cosmos.Auth.V1beta1.QueryModuleAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ModuleAccounts, null, options, request);
      }
      /// <summary>
      /// ModuleAccounts returns all the existing module accounts.
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryModuleAccountsResponse> ModuleAccountsAsync(global::Cosmos.Auth.V1beta1.QueryModuleAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModuleAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ModuleAccounts returns all the existing module accounts.
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryModuleAccountsResponse> ModuleAccountsAsync(global::Cosmos.Auth.V1beta1.QueryModuleAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ModuleAccounts, null, options, request);
      }
      /// <summary>
      /// ModuleAccountByName returns the module account info by module name
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameResponse ModuleAccountByName(global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModuleAccountByName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ModuleAccountByName returns the module account info by module name
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameResponse ModuleAccountByName(global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ModuleAccountByName, null, options, request);
      }
      /// <summary>
      /// ModuleAccountByName returns the module account info by module name
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameResponse> ModuleAccountByNameAsync(global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModuleAccountByNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ModuleAccountByName returns the module account info by module name
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameResponse> ModuleAccountByNameAsync(global::Cosmos.Auth.V1beta1.QueryModuleAccountByNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ModuleAccountByName, null, options, request);
      }
      /// <summary>
      /// Bech32Prefix queries bech32Prefix
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.Bech32PrefixResponse Bech32Prefix(global::Cosmos.Auth.V1beta1.Bech32PrefixRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Bech32Prefix(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bech32Prefix queries bech32Prefix
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.Bech32PrefixResponse Bech32Prefix(global::Cosmos.Auth.V1beta1.Bech32PrefixRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Bech32Prefix, null, options, request);
      }
      /// <summary>
      /// Bech32Prefix queries bech32Prefix
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.Bech32PrefixResponse> Bech32PrefixAsync(global::Cosmos.Auth.V1beta1.Bech32PrefixRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Bech32PrefixAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bech32Prefix queries bech32Prefix
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.Bech32PrefixResponse> Bech32PrefixAsync(global::Cosmos.Auth.V1beta1.Bech32PrefixRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Bech32Prefix, null, options, request);
      }
      /// <summary>
      /// AddressBytesToString converts Account Address bytes to string
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.AddressBytesToStringResponse AddressBytesToString(global::Cosmos.Auth.V1beta1.AddressBytesToStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddressBytesToString(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddressBytesToString converts Account Address bytes to string
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.AddressBytesToStringResponse AddressBytesToString(global::Cosmos.Auth.V1beta1.AddressBytesToStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddressBytesToString, null, options, request);
      }
      /// <summary>
      /// AddressBytesToString converts Account Address bytes to string
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.AddressBytesToStringResponse> AddressBytesToStringAsync(global::Cosmos.Auth.V1beta1.AddressBytesToStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddressBytesToStringAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddressBytesToString converts Account Address bytes to string
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.AddressBytesToStringResponse> AddressBytesToStringAsync(global::Cosmos.Auth.V1beta1.AddressBytesToStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddressBytesToString, null, options, request);
      }
      /// <summary>
      /// AddressStringToBytes converts Address string to bytes
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.AddressStringToBytesResponse AddressStringToBytes(global::Cosmos.Auth.V1beta1.AddressStringToBytesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddressStringToBytes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddressStringToBytes converts Address string to bytes
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.AddressStringToBytesResponse AddressStringToBytes(global::Cosmos.Auth.V1beta1.AddressStringToBytesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddressStringToBytes, null, options, request);
      }
      /// <summary>
      /// AddressStringToBytes converts Address string to bytes
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.AddressStringToBytesResponse> AddressStringToBytesAsync(global::Cosmos.Auth.V1beta1.AddressStringToBytesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddressStringToBytesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AddressStringToBytes converts Address string to bytes
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.AddressStringToBytesResponse> AddressStringToBytesAsync(global::Cosmos.Auth.V1beta1.AddressStringToBytesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddressStringToBytes, null, options, request);
      }
      /// <summary>
      /// AccountInfo queries account info which is common to all account types.
      ///
      /// Since: cosmos-sdk 0.47
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryAccountInfoResponse AccountInfo(global::Cosmos.Auth.V1beta1.QueryAccountInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccountInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AccountInfo queries account info which is common to all account types.
      ///
      /// Since: cosmos-sdk 0.47
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Auth.V1beta1.QueryAccountInfoResponse AccountInfo(global::Cosmos.Auth.V1beta1.QueryAccountInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AccountInfo, null, options, request);
      }
      /// <summary>
      /// AccountInfo queries account info which is common to all account types.
      ///
      /// Since: cosmos-sdk 0.47
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryAccountInfoResponse> AccountInfoAsync(global::Cosmos.Auth.V1beta1.QueryAccountInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccountInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AccountInfo queries account info which is common to all account types.
      ///
      /// Since: cosmos-sdk 0.47
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Auth.V1beta1.QueryAccountInfoResponse> AccountInfoAsync(global::Cosmos.Auth.V1beta1.QueryAccountInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AccountInfo, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override QueryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new QueryClient(configuration);
      }
    }

  }
}
#endregion
