// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmos/distribution/v1beta1/query.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cosmos.Distribution.V1beta1 {
  /// <summary>
  /// Query defines the gRPC querier service for distribution module.
  /// </summary>
  public static partial class Query
  {
    static readonly string __ServiceName = "cosmos.distribution.v1beta1.Query";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryParamsRequest> __Marshaller_cosmos_distribution_v1beta1_QueryParamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryParamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryParamsResponse> __Marshaller_cosmos_distribution_v1beta1_QueryParamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryParamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoRequest> __Marshaller_cosmos_distribution_v1beta1_QueryValidatorDistributionInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoResponse> __Marshaller_cosmos_distribution_v1beta1_QueryValidatorDistributionInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsRequest> __Marshaller_cosmos_distribution_v1beta1_QueryValidatorOutstandingRewardsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsResponse> __Marshaller_cosmos_distribution_v1beta1_QueryValidatorOutstandingRewardsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionRequest> __Marshaller_cosmos_distribution_v1beta1_QueryValidatorCommissionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionResponse> __Marshaller_cosmos_distribution_v1beta1_QueryValidatorCommissionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesRequest> __Marshaller_cosmos_distribution_v1beta1_QueryValidatorSlashesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesResponse> __Marshaller_cosmos_distribution_v1beta1_QueryValidatorSlashesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsRequest> __Marshaller_cosmos_distribution_v1beta1_QueryDelegationRewardsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsResponse> __Marshaller_cosmos_distribution_v1beta1_QueryDelegationRewardsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsRequest> __Marshaller_cosmos_distribution_v1beta1_QueryDelegationTotalRewardsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsResponse> __Marshaller_cosmos_distribution_v1beta1_QueryDelegationTotalRewardsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsRequest> __Marshaller_cosmos_distribution_v1beta1_QueryDelegatorValidatorsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsResponse> __Marshaller_cosmos_distribution_v1beta1_QueryDelegatorValidatorsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressRequest> __Marshaller_cosmos_distribution_v1beta1_QueryDelegatorWithdrawAddressRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressResponse> __Marshaller_cosmos_distribution_v1beta1_QueryDelegatorWithdrawAddressResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryCommunityPoolRequest> __Marshaller_cosmos_distribution_v1beta1_QueryCommunityPoolRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryCommunityPoolRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Distribution.V1beta1.QueryCommunityPoolResponse> __Marshaller_cosmos_distribution_v1beta1_QueryCommunityPoolResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Distribution.V1beta1.QueryCommunityPoolResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Distribution.V1beta1.QueryParamsRequest, global::Cosmos.Distribution.V1beta1.QueryParamsResponse> __Method_Params = new grpc::Method<global::Cosmos.Distribution.V1beta1.QueryParamsRequest, global::Cosmos.Distribution.V1beta1.QueryParamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Params",
        __Marshaller_cosmos_distribution_v1beta1_QueryParamsRequest,
        __Marshaller_cosmos_distribution_v1beta1_QueryParamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoRequest, global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoResponse> __Method_ValidatorDistributionInfo = new grpc::Method<global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoRequest, global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidatorDistributionInfo",
        __Marshaller_cosmos_distribution_v1beta1_QueryValidatorDistributionInfoRequest,
        __Marshaller_cosmos_distribution_v1beta1_QueryValidatorDistributionInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsRequest, global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsResponse> __Method_ValidatorOutstandingRewards = new grpc::Method<global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsRequest, global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidatorOutstandingRewards",
        __Marshaller_cosmos_distribution_v1beta1_QueryValidatorOutstandingRewardsRequest,
        __Marshaller_cosmos_distribution_v1beta1_QueryValidatorOutstandingRewardsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionRequest, global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionResponse> __Method_ValidatorCommission = new grpc::Method<global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionRequest, global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidatorCommission",
        __Marshaller_cosmos_distribution_v1beta1_QueryValidatorCommissionRequest,
        __Marshaller_cosmos_distribution_v1beta1_QueryValidatorCommissionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesRequest, global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesResponse> __Method_ValidatorSlashes = new grpc::Method<global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesRequest, global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidatorSlashes",
        __Marshaller_cosmos_distribution_v1beta1_QueryValidatorSlashesRequest,
        __Marshaller_cosmos_distribution_v1beta1_QueryValidatorSlashesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsRequest, global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsResponse> __Method_DelegationRewards = new grpc::Method<global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsRequest, global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DelegationRewards",
        __Marshaller_cosmos_distribution_v1beta1_QueryDelegationRewardsRequest,
        __Marshaller_cosmos_distribution_v1beta1_QueryDelegationRewardsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsRequest, global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsResponse> __Method_DelegationTotalRewards = new grpc::Method<global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsRequest, global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DelegationTotalRewards",
        __Marshaller_cosmos_distribution_v1beta1_QueryDelegationTotalRewardsRequest,
        __Marshaller_cosmos_distribution_v1beta1_QueryDelegationTotalRewardsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsRequest, global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsResponse> __Method_DelegatorValidators = new grpc::Method<global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsRequest, global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DelegatorValidators",
        __Marshaller_cosmos_distribution_v1beta1_QueryDelegatorValidatorsRequest,
        __Marshaller_cosmos_distribution_v1beta1_QueryDelegatorValidatorsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressRequest, global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressResponse> __Method_DelegatorWithdrawAddress = new grpc::Method<global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressRequest, global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DelegatorWithdrawAddress",
        __Marshaller_cosmos_distribution_v1beta1_QueryDelegatorWithdrawAddressRequest,
        __Marshaller_cosmos_distribution_v1beta1_QueryDelegatorWithdrawAddressResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Distribution.V1beta1.QueryCommunityPoolRequest, global::Cosmos.Distribution.V1beta1.QueryCommunityPoolResponse> __Method_CommunityPool = new grpc::Method<global::Cosmos.Distribution.V1beta1.QueryCommunityPoolRequest, global::Cosmos.Distribution.V1beta1.QueryCommunityPoolResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CommunityPool",
        __Marshaller_cosmos_distribution_v1beta1_QueryCommunityPoolRequest,
        __Marshaller_cosmos_distribution_v1beta1_QueryCommunityPoolResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cosmos.Distribution.V1beta1.QueryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Query</summary>
    public partial class QueryClient : grpc::ClientBase<QueryClient>
    {
      /// <summary>Creates a new client for Query</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Query that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Params queries params of the distribution module.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryParamsResponse Params(global::Cosmos.Distribution.V1beta1.QueryParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Params(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Params queries params of the distribution module.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryParamsResponse Params(global::Cosmos.Distribution.V1beta1.QueryParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Params, null, options, request);
      }
      /// <summary>
      /// Params queries params of the distribution module.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryParamsResponse> ParamsAsync(global::Cosmos.Distribution.V1beta1.QueryParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ParamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Params queries params of the distribution module.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryParamsResponse> ParamsAsync(global::Cosmos.Distribution.V1beta1.QueryParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Params, null, options, request);
      }
      /// <summary>
      /// ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoResponse ValidatorDistributionInfo(global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorDistributionInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoResponse ValidatorDistributionInfo(global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidatorDistributionInfo, null, options, request);
      }
      /// <summary>
      /// ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoResponse> ValidatorDistributionInfoAsync(global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorDistributionInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoResponse> ValidatorDistributionInfoAsync(global::Cosmos.Distribution.V1beta1.QueryValidatorDistributionInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidatorDistributionInfo, null, options, request);
      }
      /// <summary>
      /// ValidatorOutstandingRewards queries rewards of a validator address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsResponse ValidatorOutstandingRewards(global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorOutstandingRewards(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ValidatorOutstandingRewards queries rewards of a validator address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsResponse ValidatorOutstandingRewards(global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidatorOutstandingRewards, null, options, request);
      }
      /// <summary>
      /// ValidatorOutstandingRewards queries rewards of a validator address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsResponse> ValidatorOutstandingRewardsAsync(global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorOutstandingRewardsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ValidatorOutstandingRewards queries rewards of a validator address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsResponse> ValidatorOutstandingRewardsAsync(global::Cosmos.Distribution.V1beta1.QueryValidatorOutstandingRewardsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidatorOutstandingRewards, null, options, request);
      }
      /// <summary>
      /// ValidatorCommission queries accumulated commission for a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionResponse ValidatorCommission(global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorCommission(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ValidatorCommission queries accumulated commission for a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionResponse ValidatorCommission(global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidatorCommission, null, options, request);
      }
      /// <summary>
      /// ValidatorCommission queries accumulated commission for a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionResponse> ValidatorCommissionAsync(global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorCommissionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ValidatorCommission queries accumulated commission for a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionResponse> ValidatorCommissionAsync(global::Cosmos.Distribution.V1beta1.QueryValidatorCommissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidatorCommission, null, options, request);
      }
      /// <summary>
      /// ValidatorSlashes queries slash events of a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesResponse ValidatorSlashes(global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorSlashes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ValidatorSlashes queries slash events of a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesResponse ValidatorSlashes(global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidatorSlashes, null, options, request);
      }
      /// <summary>
      /// ValidatorSlashes queries slash events of a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesResponse> ValidatorSlashesAsync(global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorSlashesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ValidatorSlashes queries slash events of a validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesResponse> ValidatorSlashesAsync(global::Cosmos.Distribution.V1beta1.QueryValidatorSlashesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidatorSlashes, null, options, request);
      }
      /// <summary>
      /// DelegationRewards queries the total rewards accrued by a delegation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsResponse DelegationRewards(global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegationRewards(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegationRewards queries the total rewards accrued by a delegation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsResponse DelegationRewards(global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DelegationRewards, null, options, request);
      }
      /// <summary>
      /// DelegationRewards queries the total rewards accrued by a delegation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsResponse> DelegationRewardsAsync(global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegationRewardsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegationRewards queries the total rewards accrued by a delegation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsResponse> DelegationRewardsAsync(global::Cosmos.Distribution.V1beta1.QueryDelegationRewardsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DelegationRewards, null, options, request);
      }
      /// <summary>
      /// DelegationTotalRewards queries the total rewards accrued by a each
      /// validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsResponse DelegationTotalRewards(global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegationTotalRewards(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegationTotalRewards queries the total rewards accrued by a each
      /// validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsResponse DelegationTotalRewards(global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DelegationTotalRewards, null, options, request);
      }
      /// <summary>
      /// DelegationTotalRewards queries the total rewards accrued by a each
      /// validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsResponse> DelegationTotalRewardsAsync(global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegationTotalRewardsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegationTotalRewards queries the total rewards accrued by a each
      /// validator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsResponse> DelegationTotalRewardsAsync(global::Cosmos.Distribution.V1beta1.QueryDelegationTotalRewardsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DelegationTotalRewards, null, options, request);
      }
      /// <summary>
      /// DelegatorValidators queries the validators of a delegator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsResponse DelegatorValidators(global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegatorValidators(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegatorValidators queries the validators of a delegator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsResponse DelegatorValidators(global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DelegatorValidators, null, options, request);
      }
      /// <summary>
      /// DelegatorValidators queries the validators of a delegator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsResponse> DelegatorValidatorsAsync(global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegatorValidatorsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegatorValidators queries the validators of a delegator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsResponse> DelegatorValidatorsAsync(global::Cosmos.Distribution.V1beta1.QueryDelegatorValidatorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DelegatorValidators, null, options, request);
      }
      /// <summary>
      /// DelegatorWithdrawAddress queries withdraw address of a delegator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressResponse DelegatorWithdrawAddress(global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegatorWithdrawAddress(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegatorWithdrawAddress queries withdraw address of a delegator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressResponse DelegatorWithdrawAddress(global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DelegatorWithdrawAddress, null, options, request);
      }
      /// <summary>
      /// DelegatorWithdrawAddress queries withdraw address of a delegator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressResponse> DelegatorWithdrawAddressAsync(global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegatorWithdrawAddressAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegatorWithdrawAddress queries withdraw address of a delegator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressResponse> DelegatorWithdrawAddressAsync(global::Cosmos.Distribution.V1beta1.QueryDelegatorWithdrawAddressRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DelegatorWithdrawAddress, null, options, request);
      }
      /// <summary>
      /// CommunityPool queries the community pool coins.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryCommunityPoolResponse CommunityPool(global::Cosmos.Distribution.V1beta1.QueryCommunityPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CommunityPool(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CommunityPool queries the community pool coins.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Distribution.V1beta1.QueryCommunityPoolResponse CommunityPool(global::Cosmos.Distribution.V1beta1.QueryCommunityPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CommunityPool, null, options, request);
      }
      /// <summary>
      /// CommunityPool queries the community pool coins.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryCommunityPoolResponse> CommunityPoolAsync(global::Cosmos.Distribution.V1beta1.QueryCommunityPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CommunityPoolAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CommunityPool queries the community pool coins.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Distribution.V1beta1.QueryCommunityPoolResponse> CommunityPoolAsync(global::Cosmos.Distribution.V1beta1.QueryCommunityPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CommunityPool, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override QueryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new QueryClient(configuration);
      }
    }

  }
}
#endregion
