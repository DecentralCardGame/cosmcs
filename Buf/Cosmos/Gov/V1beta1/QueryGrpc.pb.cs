// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmos/gov/v1beta1/query.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cosmos.Gov.V1beta1 {
  /// <summary>
  /// Query defines the gRPC querier service for gov module
  /// </summary>
  public static partial class Query
  {
    static readonly string __ServiceName = "cosmos.gov.v1beta1.Query";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryProposalRequest> __Marshaller_cosmos_gov_v1beta1_QueryProposalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryProposalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryProposalResponse> __Marshaller_cosmos_gov_v1beta1_QueryProposalResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryProposalResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryProposalsRequest> __Marshaller_cosmos_gov_v1beta1_QueryProposalsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryProposalsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryProposalsResponse> __Marshaller_cosmos_gov_v1beta1_QueryProposalsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryProposalsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryVoteRequest> __Marshaller_cosmos_gov_v1beta1_QueryVoteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryVoteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryVoteResponse> __Marshaller_cosmos_gov_v1beta1_QueryVoteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryVoteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryVotesRequest> __Marshaller_cosmos_gov_v1beta1_QueryVotesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryVotesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryVotesResponse> __Marshaller_cosmos_gov_v1beta1_QueryVotesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryVotesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryParamsRequest> __Marshaller_cosmos_gov_v1beta1_QueryParamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryParamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryParamsResponse> __Marshaller_cosmos_gov_v1beta1_QueryParamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryParamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryDepositRequest> __Marshaller_cosmos_gov_v1beta1_QueryDepositRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryDepositRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryDepositResponse> __Marshaller_cosmos_gov_v1beta1_QueryDepositResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryDepositResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryDepositsRequest> __Marshaller_cosmos_gov_v1beta1_QueryDepositsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryDepositsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryDepositsResponse> __Marshaller_cosmos_gov_v1beta1_QueryDepositsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryDepositsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryTallyResultRequest> __Marshaller_cosmos_gov_v1beta1_QueryTallyResultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryTallyResultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Gov.V1beta1.QueryTallyResultResponse> __Marshaller_cosmos_gov_v1beta1_QueryTallyResultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Gov.V1beta1.QueryTallyResultResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Gov.V1beta1.QueryProposalRequest, global::Cosmos.Gov.V1beta1.QueryProposalResponse> __Method_Proposal = new grpc::Method<global::Cosmos.Gov.V1beta1.QueryProposalRequest, global::Cosmos.Gov.V1beta1.QueryProposalResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Proposal",
        __Marshaller_cosmos_gov_v1beta1_QueryProposalRequest,
        __Marshaller_cosmos_gov_v1beta1_QueryProposalResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Gov.V1beta1.QueryProposalsRequest, global::Cosmos.Gov.V1beta1.QueryProposalsResponse> __Method_Proposals = new grpc::Method<global::Cosmos.Gov.V1beta1.QueryProposalsRequest, global::Cosmos.Gov.V1beta1.QueryProposalsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Proposals",
        __Marshaller_cosmos_gov_v1beta1_QueryProposalsRequest,
        __Marshaller_cosmos_gov_v1beta1_QueryProposalsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Gov.V1beta1.QueryVoteRequest, global::Cosmos.Gov.V1beta1.QueryVoteResponse> __Method_Vote = new grpc::Method<global::Cosmos.Gov.V1beta1.QueryVoteRequest, global::Cosmos.Gov.V1beta1.QueryVoteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Vote",
        __Marshaller_cosmos_gov_v1beta1_QueryVoteRequest,
        __Marshaller_cosmos_gov_v1beta1_QueryVoteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Gov.V1beta1.QueryVotesRequest, global::Cosmos.Gov.V1beta1.QueryVotesResponse> __Method_Votes = new grpc::Method<global::Cosmos.Gov.V1beta1.QueryVotesRequest, global::Cosmos.Gov.V1beta1.QueryVotesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Votes",
        __Marshaller_cosmos_gov_v1beta1_QueryVotesRequest,
        __Marshaller_cosmos_gov_v1beta1_QueryVotesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Gov.V1beta1.QueryParamsRequest, global::Cosmos.Gov.V1beta1.QueryParamsResponse> __Method_Params = new grpc::Method<global::Cosmos.Gov.V1beta1.QueryParamsRequest, global::Cosmos.Gov.V1beta1.QueryParamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Params",
        __Marshaller_cosmos_gov_v1beta1_QueryParamsRequest,
        __Marshaller_cosmos_gov_v1beta1_QueryParamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Gov.V1beta1.QueryDepositRequest, global::Cosmos.Gov.V1beta1.QueryDepositResponse> __Method_Deposit = new grpc::Method<global::Cosmos.Gov.V1beta1.QueryDepositRequest, global::Cosmos.Gov.V1beta1.QueryDepositResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Deposit",
        __Marshaller_cosmos_gov_v1beta1_QueryDepositRequest,
        __Marshaller_cosmos_gov_v1beta1_QueryDepositResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Gov.V1beta1.QueryDepositsRequest, global::Cosmos.Gov.V1beta1.QueryDepositsResponse> __Method_Deposits = new grpc::Method<global::Cosmos.Gov.V1beta1.QueryDepositsRequest, global::Cosmos.Gov.V1beta1.QueryDepositsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Deposits",
        __Marshaller_cosmos_gov_v1beta1_QueryDepositsRequest,
        __Marshaller_cosmos_gov_v1beta1_QueryDepositsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Gov.V1beta1.QueryTallyResultRequest, global::Cosmos.Gov.V1beta1.QueryTallyResultResponse> __Method_TallyResult = new grpc::Method<global::Cosmos.Gov.V1beta1.QueryTallyResultRequest, global::Cosmos.Gov.V1beta1.QueryTallyResultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TallyResult",
        __Marshaller_cosmos_gov_v1beta1_QueryTallyResultRequest,
        __Marshaller_cosmos_gov_v1beta1_QueryTallyResultResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cosmos.Gov.V1beta1.QueryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Query</summary>
    public partial class QueryClient : grpc::ClientBase<QueryClient>
    {
      /// <summary>Creates a new client for Query</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Query that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Proposal queries proposal details based on ProposalID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryProposalResponse Proposal(global::Cosmos.Gov.V1beta1.QueryProposalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Proposal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Proposal queries proposal details based on ProposalID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryProposalResponse Proposal(global::Cosmos.Gov.V1beta1.QueryProposalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Proposal, null, options, request);
      }
      /// <summary>
      /// Proposal queries proposal details based on ProposalID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryProposalResponse> ProposalAsync(global::Cosmos.Gov.V1beta1.QueryProposalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProposalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Proposal queries proposal details based on ProposalID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryProposalResponse> ProposalAsync(global::Cosmos.Gov.V1beta1.QueryProposalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Proposal, null, options, request);
      }
      /// <summary>
      /// Proposals queries all proposals based on given status.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryProposalsResponse Proposals(global::Cosmos.Gov.V1beta1.QueryProposalsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Proposals(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Proposals queries all proposals based on given status.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryProposalsResponse Proposals(global::Cosmos.Gov.V1beta1.QueryProposalsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Proposals, null, options, request);
      }
      /// <summary>
      /// Proposals queries all proposals based on given status.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryProposalsResponse> ProposalsAsync(global::Cosmos.Gov.V1beta1.QueryProposalsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProposalsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Proposals queries all proposals based on given status.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryProposalsResponse> ProposalsAsync(global::Cosmos.Gov.V1beta1.QueryProposalsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Proposals, null, options, request);
      }
      /// <summary>
      /// Vote queries voted information based on proposalID, voterAddr.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryVoteResponse Vote(global::Cosmos.Gov.V1beta1.QueryVoteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Vote(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Vote queries voted information based on proposalID, voterAddr.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryVoteResponse Vote(global::Cosmos.Gov.V1beta1.QueryVoteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Vote, null, options, request);
      }
      /// <summary>
      /// Vote queries voted information based on proposalID, voterAddr.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryVoteResponse> VoteAsync(global::Cosmos.Gov.V1beta1.QueryVoteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VoteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Vote queries voted information based on proposalID, voterAddr.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryVoteResponse> VoteAsync(global::Cosmos.Gov.V1beta1.QueryVoteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Vote, null, options, request);
      }
      /// <summary>
      /// Votes queries votes of a given proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryVotesResponse Votes(global::Cosmos.Gov.V1beta1.QueryVotesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Votes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Votes queries votes of a given proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryVotesResponse Votes(global::Cosmos.Gov.V1beta1.QueryVotesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Votes, null, options, request);
      }
      /// <summary>
      /// Votes queries votes of a given proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryVotesResponse> VotesAsync(global::Cosmos.Gov.V1beta1.QueryVotesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VotesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Votes queries votes of a given proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryVotesResponse> VotesAsync(global::Cosmos.Gov.V1beta1.QueryVotesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Votes, null, options, request);
      }
      /// <summary>
      /// Params queries all parameters of the gov module.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryParamsResponse Params(global::Cosmos.Gov.V1beta1.QueryParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Params(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Params queries all parameters of the gov module.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryParamsResponse Params(global::Cosmos.Gov.V1beta1.QueryParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Params, null, options, request);
      }
      /// <summary>
      /// Params queries all parameters of the gov module.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryParamsResponse> ParamsAsync(global::Cosmos.Gov.V1beta1.QueryParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ParamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Params queries all parameters of the gov module.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryParamsResponse> ParamsAsync(global::Cosmos.Gov.V1beta1.QueryParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Params, null, options, request);
      }
      /// <summary>
      /// Deposit queries single deposit information based on proposalID, depositor address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryDepositResponse Deposit(global::Cosmos.Gov.V1beta1.QueryDepositRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Deposit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deposit queries single deposit information based on proposalID, depositor address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryDepositResponse Deposit(global::Cosmos.Gov.V1beta1.QueryDepositRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Deposit, null, options, request);
      }
      /// <summary>
      /// Deposit queries single deposit information based on proposalID, depositor address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryDepositResponse> DepositAsync(global::Cosmos.Gov.V1beta1.QueryDepositRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DepositAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deposit queries single deposit information based on proposalID, depositor address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryDepositResponse> DepositAsync(global::Cosmos.Gov.V1beta1.QueryDepositRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Deposit, null, options, request);
      }
      /// <summary>
      /// Deposits queries all deposits of a single proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryDepositsResponse Deposits(global::Cosmos.Gov.V1beta1.QueryDepositsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Deposits(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deposits queries all deposits of a single proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryDepositsResponse Deposits(global::Cosmos.Gov.V1beta1.QueryDepositsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Deposits, null, options, request);
      }
      /// <summary>
      /// Deposits queries all deposits of a single proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryDepositsResponse> DepositsAsync(global::Cosmos.Gov.V1beta1.QueryDepositsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DepositsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deposits queries all deposits of a single proposal.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryDepositsResponse> DepositsAsync(global::Cosmos.Gov.V1beta1.QueryDepositsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Deposits, null, options, request);
      }
      /// <summary>
      /// TallyResult queries the tally of a proposal vote.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryTallyResultResponse TallyResult(global::Cosmos.Gov.V1beta1.QueryTallyResultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TallyResult(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// TallyResult queries the tally of a proposal vote.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Gov.V1beta1.QueryTallyResultResponse TallyResult(global::Cosmos.Gov.V1beta1.QueryTallyResultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TallyResult, null, options, request);
      }
      /// <summary>
      /// TallyResult queries the tally of a proposal vote.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryTallyResultResponse> TallyResultAsync(global::Cosmos.Gov.V1beta1.QueryTallyResultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TallyResultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// TallyResult queries the tally of a proposal vote.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Gov.V1beta1.QueryTallyResultResponse> TallyResultAsync(global::Cosmos.Gov.V1beta1.QueryTallyResultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TallyResult, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override QueryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new QueryClient(configuration);
      }
    }

  }
}
#endregion
