// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmos/slashing/v1beta1/slashing.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cosmos.Slashing.V1beta1 {

  /// <summary>Holder for reflection information generated from cosmos/slashing/v1beta1/slashing.proto</summary>
  public static partial class SlashingReflection {

    #region Descriptor
    /// <summary>File descriptor for cosmos/slashing/v1beta1/slashing.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SlashingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZjb3Ntb3Mvc2xhc2hpbmcvdjFiZXRhMS9zbGFzaGluZy5wcm90bxIXY29z",
            "bW9zLnNsYXNoaW5nLnYxYmV0YTEaFGdvZ29wcm90by9nb2dvLnByb3RvGh5n",
            "b29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8aH2dvb2dsZS9wcm90b2J1",
            "Zi90aW1lc3RhbXAucHJvdG8aGWNvc21vc19wcm90by9jb3Ntb3MucHJvdG8a",
            "EWFtaW5vL2FtaW5vLnByb3RvIsECChRWYWxpZGF0b3JTaWduaW5nSW5mbxI7",
            "CgdhZGRyZXNzGAEgASgJQiHStC0dY29zbW9zLkNvbnNlbnN1c0FkZHJlc3NT",
            "dHJpbmdSB2FkZHJlc3MSIQoMc3RhcnRfaGVpZ2h0GAIgASgDUgtzdGFydEhl",
            "aWdodBIhCgxpbmRleF9vZmZzZXQYAyABKANSC2luZGV4T2Zmc2V0EkwKDGph",
            "aWxlZF91bnRpbBgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBC",
            "DcjeHwCQ3x8BqOewKgFSC2phaWxlZFVudGlsEh4KCnRvbWJzdG9uZWQYBSAB",
            "KAhSCnRvbWJzdG9uZWQSMgoVbWlzc2VkX2Jsb2Nrc19jb3VudGVyGAYgASgD",
            "UhNtaXNzZWRCbG9ja3NDb3VudGVyOgTooB8BIo0ECgZQYXJhbXMSMAoUc2ln",
            "bmVkX2Jsb2Nrc193aW5kb3cYASABKANSEnNpZ25lZEJsb2Nrc1dpbmRvdxJp",
            "ChVtaW5fc2lnbmVkX3Blcl93aW5kb3cYAiABKAxCNsjeHwDa3h8bY29zbW9z",
            "c2RrLmlvL21hdGguTGVnYWN5RGVj0rQtCmNvc21vcy5EZWOo57AqAVISbWlu",
            "U2lnbmVkUGVyV2luZG93El4KFmRvd250aW1lX2phaWxfZHVyYXRpb24YAyAB",
            "KAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25CDcjeHwCY3x8BqOewKgFS",
            "FGRvd250aW1lSmFpbER1cmF0aW9uEnMKGnNsYXNoX2ZyYWN0aW9uX2RvdWJs",
            "ZV9zaWduGAQgASgMQjbI3h8A2t4fG2Nvc21vc3Nkay5pby9tYXRoLkxlZ2Fj",
            "eURlY9K0LQpjb3Ntb3MuRGVjqOewKgFSF3NsYXNoRnJhY3Rpb25Eb3VibGVT",
            "aWduEm4KF3NsYXNoX2ZyYWN0aW9uX2Rvd250aW1lGAUgASgMQjbI3h8A2t4f",
            "G2Nvc21vc3Nkay5pby9tYXRoLkxlZ2FjeURlY9K0LQpjb3Ntb3MuRGVjqOew",
            "KgFSFXNsYXNoRnJhY3Rpb25Eb3dudGltZTohiuewKhxjb3Ntb3Mtc2RrL3gv",
            "c2xhc2hpbmcvUGFyYW1zQvQBChtjb20uY29zbW9zLnNsYXNoaW5nLnYxYmV0",
            "YTFCDVNsYXNoaW5nUHJvdG9QAVpEZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9z",
            "LXNkay9jb3Ntb3Mvc2xhc2hpbmcvdjFiZXRhMTtzbGFzaGluZ3YxYmV0YTGi",
            "AgNDU1iqAhdDb3Ntb3MuU2xhc2hpbmcuVjFiZXRhMcoCF0Nvc21vc1xTbGFz",
            "aGluZ1xWMWJldGEx4gIjQ29zbW9zXFNsYXNoaW5nXFYxYmV0YTFcR1BCTWV0",
            "YWRhdGHqAhlDb3Ntb3M6OlNsYXNoaW5nOjpWMWJldGExqOIeAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Gogoproto.GogoReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::CosmosProto.CosmosReflection.Descriptor, global::Amino.AminoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Slashing.V1beta1.ValidatorSigningInfo), global::Cosmos.Slashing.V1beta1.ValidatorSigningInfo.Parser, new[]{ "Address", "StartHeight", "IndexOffset", "JailedUntil", "Tombstoned", "MissedBlocksCounter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Slashing.V1beta1.Params), global::Cosmos.Slashing.V1beta1.Params.Parser, new[]{ "SignedBlocksWindow", "MinSignedPerWindow", "DowntimeJailDuration", "SlashFractionDoubleSign", "SlashFractionDowntime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// ValidatorSigningInfo defines a validator's signing info for monitoring their
  /// liveness activity.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ValidatorSigningInfo : pb::IMessage<ValidatorSigningInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValidatorSigningInfo> _parser = new pb::MessageParser<ValidatorSigningInfo>(() => new ValidatorSigningInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ValidatorSigningInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Slashing.V1beta1.SlashingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidatorSigningInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidatorSigningInfo(ValidatorSigningInfo other) : this() {
      address_ = other.address_;
      startHeight_ = other.startHeight_;
      indexOffset_ = other.indexOffset_;
      jailedUntil_ = other.jailedUntil_ != null ? other.jailedUntil_.Clone() : null;
      tombstoned_ = other.tombstoned_;
      missedBlocksCounter_ = other.missedBlocksCounter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidatorSigningInfo Clone() {
      return new ValidatorSigningInfo(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_height" field.</summary>
    public const int StartHeightFieldNumber = 2;
    private long startHeight_;
    /// <summary>
    /// Height at which validator was first a candidate OR was un-jailed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartHeight {
      get { return startHeight_; }
      set {
        startHeight_ = value;
      }
    }

    /// <summary>Field number for the "index_offset" field.</summary>
    public const int IndexOffsetFieldNumber = 3;
    private long indexOffset_;
    /// <summary>
    /// Index which is incremented every time a validator is bonded in a block and
    /// _may_ have signed a pre-commit or not. This in conjunction with the
    /// signed_blocks_window param determines the index in the missed block bitmap.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long IndexOffset {
      get { return indexOffset_; }
      set {
        indexOffset_ = value;
      }
    }

    /// <summary>Field number for the "jailed_until" field.</summary>
    public const int JailedUntilFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp jailedUntil_;
    /// <summary>
    /// Timestamp until which the validator is jailed due to liveness downtime.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp JailedUntil {
      get { return jailedUntil_; }
      set {
        jailedUntil_ = value;
      }
    }

    /// <summary>Field number for the "tombstoned" field.</summary>
    public const int TombstonedFieldNumber = 5;
    private bool tombstoned_;
    /// <summary>
    /// Whether or not a validator has been tombstoned (killed out of validator
    /// set). It is set once the validator commits an equivocation or for any other
    /// configured misbehavior.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Tombstoned {
      get { return tombstoned_; }
      set {
        tombstoned_ = value;
      }
    }

    /// <summary>Field number for the "missed_blocks_counter" field.</summary>
    public const int MissedBlocksCounterFieldNumber = 6;
    private long missedBlocksCounter_;
    /// <summary>
    /// A counter of missed (unsigned) blocks. It is used to avoid unnecessary
    /// reads in the missed block bitmap.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MissedBlocksCounter {
      get { return missedBlocksCounter_; }
      set {
        missedBlocksCounter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ValidatorSigningInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ValidatorSigningInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (StartHeight != other.StartHeight) return false;
      if (IndexOffset != other.IndexOffset) return false;
      if (!object.Equals(JailedUntil, other.JailedUntil)) return false;
      if (Tombstoned != other.Tombstoned) return false;
      if (MissedBlocksCounter != other.MissedBlocksCounter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (StartHeight != 0L) hash ^= StartHeight.GetHashCode();
      if (IndexOffset != 0L) hash ^= IndexOffset.GetHashCode();
      if (jailedUntil_ != null) hash ^= JailedUntil.GetHashCode();
      if (Tombstoned != false) hash ^= Tombstoned.GetHashCode();
      if (MissedBlocksCounter != 0L) hash ^= MissedBlocksCounter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (StartHeight != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartHeight);
      }
      if (IndexOffset != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(IndexOffset);
      }
      if (jailedUntil_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(JailedUntil);
      }
      if (Tombstoned != false) {
        output.WriteRawTag(40);
        output.WriteBool(Tombstoned);
      }
      if (MissedBlocksCounter != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(MissedBlocksCounter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (StartHeight != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartHeight);
      }
      if (IndexOffset != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(IndexOffset);
      }
      if (jailedUntil_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(JailedUntil);
      }
      if (Tombstoned != false) {
        output.WriteRawTag(40);
        output.WriteBool(Tombstoned);
      }
      if (MissedBlocksCounter != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(MissedBlocksCounter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (StartHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartHeight);
      }
      if (IndexOffset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IndexOffset);
      }
      if (jailedUntil_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JailedUntil);
      }
      if (Tombstoned != false) {
        size += 1 + 1;
      }
      if (MissedBlocksCounter != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MissedBlocksCounter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ValidatorSigningInfo other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.StartHeight != 0L) {
        StartHeight = other.StartHeight;
      }
      if (other.IndexOffset != 0L) {
        IndexOffset = other.IndexOffset;
      }
      if (other.jailedUntil_ != null) {
        if (jailedUntil_ == null) {
          JailedUntil = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        JailedUntil.MergeFrom(other.JailedUntil);
      }
      if (other.Tombstoned != false) {
        Tombstoned = other.Tombstoned;
      }
      if (other.MissedBlocksCounter != 0L) {
        MissedBlocksCounter = other.MissedBlocksCounter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            StartHeight = input.ReadInt64();
            break;
          }
          case 24: {
            IndexOffset = input.ReadInt64();
            break;
          }
          case 34: {
            if (jailedUntil_ == null) {
              JailedUntil = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(JailedUntil);
            break;
          }
          case 40: {
            Tombstoned = input.ReadBool();
            break;
          }
          case 48: {
            MissedBlocksCounter = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            StartHeight = input.ReadInt64();
            break;
          }
          case 24: {
            IndexOffset = input.ReadInt64();
            break;
          }
          case 34: {
            if (jailedUntil_ == null) {
              JailedUntil = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(JailedUntil);
            break;
          }
          case 40: {
            Tombstoned = input.ReadBool();
            break;
          }
          case 48: {
            MissedBlocksCounter = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Params represents the parameters used for by the slashing module.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Params : pb::IMessage<Params>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Params> _parser = new pb::MessageParser<Params>(() => new Params());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Params> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Slashing.V1beta1.SlashingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Params() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Params(Params other) : this() {
      signedBlocksWindow_ = other.signedBlocksWindow_;
      minSignedPerWindow_ = other.minSignedPerWindow_;
      downtimeJailDuration_ = other.downtimeJailDuration_ != null ? other.downtimeJailDuration_.Clone() : null;
      slashFractionDoubleSign_ = other.slashFractionDoubleSign_;
      slashFractionDowntime_ = other.slashFractionDowntime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Params Clone() {
      return new Params(this);
    }

    /// <summary>Field number for the "signed_blocks_window" field.</summary>
    public const int SignedBlocksWindowFieldNumber = 1;
    private long signedBlocksWindow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SignedBlocksWindow {
      get { return signedBlocksWindow_; }
      set {
        signedBlocksWindow_ = value;
      }
    }

    /// <summary>Field number for the "min_signed_per_window" field.</summary>
    public const int MinSignedPerWindowFieldNumber = 2;
    private pb::ByteString minSignedPerWindow_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString MinSignedPerWindow {
      get { return minSignedPerWindow_; }
      set {
        minSignedPerWindow_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "downtime_jail_duration" field.</summary>
    public const int DowntimeJailDurationFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration downtimeJailDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration DowntimeJailDuration {
      get { return downtimeJailDuration_; }
      set {
        downtimeJailDuration_ = value;
      }
    }

    /// <summary>Field number for the "slash_fraction_double_sign" field.</summary>
    public const int SlashFractionDoubleSignFieldNumber = 4;
    private pb::ByteString slashFractionDoubleSign_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SlashFractionDoubleSign {
      get { return slashFractionDoubleSign_; }
      set {
        slashFractionDoubleSign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "slash_fraction_downtime" field.</summary>
    public const int SlashFractionDowntimeFieldNumber = 5;
    private pb::ByteString slashFractionDowntime_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SlashFractionDowntime {
      get { return slashFractionDowntime_; }
      set {
        slashFractionDowntime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Params);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Params other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignedBlocksWindow != other.SignedBlocksWindow) return false;
      if (MinSignedPerWindow != other.MinSignedPerWindow) return false;
      if (!object.Equals(DowntimeJailDuration, other.DowntimeJailDuration)) return false;
      if (SlashFractionDoubleSign != other.SlashFractionDoubleSign) return false;
      if (SlashFractionDowntime != other.SlashFractionDowntime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SignedBlocksWindow != 0L) hash ^= SignedBlocksWindow.GetHashCode();
      if (MinSignedPerWindow.Length != 0) hash ^= MinSignedPerWindow.GetHashCode();
      if (downtimeJailDuration_ != null) hash ^= DowntimeJailDuration.GetHashCode();
      if (SlashFractionDoubleSign.Length != 0) hash ^= SlashFractionDoubleSign.GetHashCode();
      if (SlashFractionDowntime.Length != 0) hash ^= SlashFractionDowntime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SignedBlocksWindow != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SignedBlocksWindow);
      }
      if (MinSignedPerWindow.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(MinSignedPerWindow);
      }
      if (downtimeJailDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DowntimeJailDuration);
      }
      if (SlashFractionDoubleSign.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(SlashFractionDoubleSign);
      }
      if (SlashFractionDowntime.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(SlashFractionDowntime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SignedBlocksWindow != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SignedBlocksWindow);
      }
      if (MinSignedPerWindow.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(MinSignedPerWindow);
      }
      if (downtimeJailDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DowntimeJailDuration);
      }
      if (SlashFractionDoubleSign.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(SlashFractionDoubleSign);
      }
      if (SlashFractionDowntime.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(SlashFractionDowntime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SignedBlocksWindow != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SignedBlocksWindow);
      }
      if (MinSignedPerWindow.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MinSignedPerWindow);
      }
      if (downtimeJailDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DowntimeJailDuration);
      }
      if (SlashFractionDoubleSign.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SlashFractionDoubleSign);
      }
      if (SlashFractionDowntime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SlashFractionDowntime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Params other) {
      if (other == null) {
        return;
      }
      if (other.SignedBlocksWindow != 0L) {
        SignedBlocksWindow = other.SignedBlocksWindow;
      }
      if (other.MinSignedPerWindow.Length != 0) {
        MinSignedPerWindow = other.MinSignedPerWindow;
      }
      if (other.downtimeJailDuration_ != null) {
        if (downtimeJailDuration_ == null) {
          DowntimeJailDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        DowntimeJailDuration.MergeFrom(other.DowntimeJailDuration);
      }
      if (other.SlashFractionDoubleSign.Length != 0) {
        SlashFractionDoubleSign = other.SlashFractionDoubleSign;
      }
      if (other.SlashFractionDowntime.Length != 0) {
        SlashFractionDowntime = other.SlashFractionDowntime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SignedBlocksWindow = input.ReadInt64();
            break;
          }
          case 18: {
            MinSignedPerWindow = input.ReadBytes();
            break;
          }
          case 26: {
            if (downtimeJailDuration_ == null) {
              DowntimeJailDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(DowntimeJailDuration);
            break;
          }
          case 34: {
            SlashFractionDoubleSign = input.ReadBytes();
            break;
          }
          case 42: {
            SlashFractionDowntime = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SignedBlocksWindow = input.ReadInt64();
            break;
          }
          case 18: {
            MinSignedPerWindow = input.ReadBytes();
            break;
          }
          case 26: {
            if (downtimeJailDuration_ == null) {
              DowntimeJailDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(DowntimeJailDuration);
            break;
          }
          case 34: {
            SlashFractionDoubleSign = input.ReadBytes();
            break;
          }
          case 42: {
            SlashFractionDowntime = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
