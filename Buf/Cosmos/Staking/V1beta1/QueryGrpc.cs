// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmos/staking/v1beta1/query.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cosmos.Staking.V1beta1 {
  /// <summary>
  /// Query defines the gRPC querier service.
  /// </summary>
  public static partial class Query
  {
    static readonly string __ServiceName = "cosmos.staking.v1beta1.Query";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryValidatorsRequest> __Marshaller_cosmos_staking_v1beta1_QueryValidatorsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryValidatorsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryValidatorsResponse> __Marshaller_cosmos_staking_v1beta1_QueryValidatorsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryValidatorsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryValidatorRequest> __Marshaller_cosmos_staking_v1beta1_QueryValidatorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryValidatorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryValidatorResponse> __Marshaller_cosmos_staking_v1beta1_QueryValidatorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryValidatorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsRequest> __Marshaller_cosmos_staking_v1beta1_QueryValidatorDelegationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsResponse> __Marshaller_cosmos_staking_v1beta1_QueryValidatorDelegationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsRequest> __Marshaller_cosmos_staking_v1beta1_QueryValidatorUnbondingDelegationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsResponse> __Marshaller_cosmos_staking_v1beta1_QueryValidatorUnbondingDelegationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryDelegationRequest> __Marshaller_cosmos_staking_v1beta1_QueryDelegationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryDelegationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryDelegationResponse> __Marshaller_cosmos_staking_v1beta1_QueryDelegationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryDelegationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationRequest> __Marshaller_cosmos_staking_v1beta1_QueryUnbondingDelegationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationResponse> __Marshaller_cosmos_staking_v1beta1_QueryUnbondingDelegationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsRequest> __Marshaller_cosmos_staking_v1beta1_QueryDelegatorDelegationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsResponse> __Marshaller_cosmos_staking_v1beta1_QueryDelegatorDelegationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsRequest> __Marshaller_cosmos_staking_v1beta1_QueryDelegatorUnbondingDelegationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsResponse> __Marshaller_cosmos_staking_v1beta1_QueryDelegatorUnbondingDelegationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryRedelegationsRequest> __Marshaller_cosmos_staking_v1beta1_QueryRedelegationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryRedelegationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryRedelegationsResponse> __Marshaller_cosmos_staking_v1beta1_QueryRedelegationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryRedelegationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsRequest> __Marshaller_cosmos_staking_v1beta1_QueryDelegatorValidatorsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsResponse> __Marshaller_cosmos_staking_v1beta1_QueryDelegatorValidatorsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorRequest> __Marshaller_cosmos_staking_v1beta1_QueryDelegatorValidatorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorResponse> __Marshaller_cosmos_staking_v1beta1_QueryDelegatorValidatorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryHistoricalInfoRequest> __Marshaller_cosmos_staking_v1beta1_QueryHistoricalInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryHistoricalInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryHistoricalInfoResponse> __Marshaller_cosmos_staking_v1beta1_QueryHistoricalInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryHistoricalInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryPoolRequest> __Marshaller_cosmos_staking_v1beta1_QueryPoolRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryPoolRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryPoolResponse> __Marshaller_cosmos_staking_v1beta1_QueryPoolResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryPoolResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryParamsRequest> __Marshaller_cosmos_staking_v1beta1_QueryParamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryParamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Staking.V1beta1.QueryParamsResponse> __Marshaller_cosmos_staking_v1beta1_QueryParamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Staking.V1beta1.QueryParamsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryValidatorsRequest, global::Cosmos.Staking.V1beta1.QueryValidatorsResponse> __Method_Validators = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryValidatorsRequest, global::Cosmos.Staking.V1beta1.QueryValidatorsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Validators",
        __Marshaller_cosmos_staking_v1beta1_QueryValidatorsRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryValidatorsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryValidatorRequest, global::Cosmos.Staking.V1beta1.QueryValidatorResponse> __Method_Validator = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryValidatorRequest, global::Cosmos.Staking.V1beta1.QueryValidatorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Validator",
        __Marshaller_cosmos_staking_v1beta1_QueryValidatorRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryValidatorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsRequest, global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsResponse> __Method_ValidatorDelegations = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsRequest, global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidatorDelegations",
        __Marshaller_cosmos_staking_v1beta1_QueryValidatorDelegationsRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryValidatorDelegationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsRequest, global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsResponse> __Method_ValidatorUnbondingDelegations = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsRequest, global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidatorUnbondingDelegations",
        __Marshaller_cosmos_staking_v1beta1_QueryValidatorUnbondingDelegationsRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryValidatorUnbondingDelegationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryDelegationRequest, global::Cosmos.Staking.V1beta1.QueryDelegationResponse> __Method_Delegation = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryDelegationRequest, global::Cosmos.Staking.V1beta1.QueryDelegationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delegation",
        __Marshaller_cosmos_staking_v1beta1_QueryDelegationRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryDelegationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationRequest, global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationResponse> __Method_UnbondingDelegation = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationRequest, global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnbondingDelegation",
        __Marshaller_cosmos_staking_v1beta1_QueryUnbondingDelegationRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryUnbondingDelegationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsRequest, global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsResponse> __Method_DelegatorDelegations = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsRequest, global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DelegatorDelegations",
        __Marshaller_cosmos_staking_v1beta1_QueryDelegatorDelegationsRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryDelegatorDelegationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsRequest, global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsResponse> __Method_DelegatorUnbondingDelegations = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsRequest, global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DelegatorUnbondingDelegations",
        __Marshaller_cosmos_staking_v1beta1_QueryDelegatorUnbondingDelegationsRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryDelegatorUnbondingDelegationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryRedelegationsRequest, global::Cosmos.Staking.V1beta1.QueryRedelegationsResponse> __Method_Redelegations = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryRedelegationsRequest, global::Cosmos.Staking.V1beta1.QueryRedelegationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Redelegations",
        __Marshaller_cosmos_staking_v1beta1_QueryRedelegationsRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryRedelegationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsRequest, global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsResponse> __Method_DelegatorValidators = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsRequest, global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DelegatorValidators",
        __Marshaller_cosmos_staking_v1beta1_QueryDelegatorValidatorsRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryDelegatorValidatorsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorRequest, global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorResponse> __Method_DelegatorValidator = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorRequest, global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DelegatorValidator",
        __Marshaller_cosmos_staking_v1beta1_QueryDelegatorValidatorRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryDelegatorValidatorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryHistoricalInfoRequest, global::Cosmos.Staking.V1beta1.QueryHistoricalInfoResponse> __Method_HistoricalInfo = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryHistoricalInfoRequest, global::Cosmos.Staking.V1beta1.QueryHistoricalInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "HistoricalInfo",
        __Marshaller_cosmos_staking_v1beta1_QueryHistoricalInfoRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryHistoricalInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryPoolRequest, global::Cosmos.Staking.V1beta1.QueryPoolResponse> __Method_Pool = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryPoolRequest, global::Cosmos.Staking.V1beta1.QueryPoolResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Pool",
        __Marshaller_cosmos_staking_v1beta1_QueryPoolRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryPoolResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Staking.V1beta1.QueryParamsRequest, global::Cosmos.Staking.V1beta1.QueryParamsResponse> __Method_Params = new grpc::Method<global::Cosmos.Staking.V1beta1.QueryParamsRequest, global::Cosmos.Staking.V1beta1.QueryParamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Params",
        __Marshaller_cosmos_staking_v1beta1_QueryParamsRequest,
        __Marshaller_cosmos_staking_v1beta1_QueryParamsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cosmos.Staking.V1beta1.QueryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Query</summary>
    [grpc::BindServiceMethod(typeof(Query), "BindService")]
    public abstract partial class QueryBase
    {
      /// <summary>
      /// Validators queries all validators that match the given status.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryValidatorsResponse> Validators(global::Cosmos.Staking.V1beta1.QueryValidatorsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Validator queries validator info for given validator address.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryValidatorResponse> Validator(global::Cosmos.Staking.V1beta1.QueryValidatorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ValidatorDelegations queries delegate info for given validator.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsResponse> ValidatorDelegations(global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ValidatorUnbondingDelegations queries unbonding delegations of a validator.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsResponse> ValidatorUnbondingDelegations(global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delegation queries delegate info for given validator delegator pair.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryDelegationResponse> Delegation(global::Cosmos.Staking.V1beta1.QueryDelegationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UnbondingDelegation queries unbonding info for given validator delegator
      /// pair.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationResponse> UnbondingDelegation(global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DelegatorDelegations queries all delegations of a given delegator address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsResponse> DelegatorDelegations(global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DelegatorUnbondingDelegations queries all unbonding delegations of a given
      /// delegator address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsResponse> DelegatorUnbondingDelegations(global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Redelegations queries redelegations of given address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryRedelegationsResponse> Redelegations(global::Cosmos.Staking.V1beta1.QueryRedelegationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DelegatorValidators queries all validators info for given delegator
      /// address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsResponse> DelegatorValidators(global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DelegatorValidator queries validator info for given delegator validator
      /// pair.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorResponse> DelegatorValidator(global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// HistoricalInfo queries the historical info for given height.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryHistoricalInfoResponse> HistoricalInfo(global::Cosmos.Staking.V1beta1.QueryHistoricalInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Pool queries the pool info.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryPoolResponse> Pool(global::Cosmos.Staking.V1beta1.QueryPoolRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Parameters queries the staking parameters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cosmos.Staking.V1beta1.QueryParamsResponse> Params(global::Cosmos.Staking.V1beta1.QueryParamsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Query</summary>
    public partial class QueryClient : grpc::ClientBase<QueryClient>
    {
      /// <summary>Creates a new client for Query</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Query that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Validators queries all validators that match the given status.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryValidatorsResponse Validators(global::Cosmos.Staking.V1beta1.QueryValidatorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Validators(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Validators queries all validators that match the given status.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryValidatorsResponse Validators(global::Cosmos.Staking.V1beta1.QueryValidatorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Validators, null, options, request);
      }
      /// <summary>
      /// Validators queries all validators that match the given status.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryValidatorsResponse> ValidatorsAsync(global::Cosmos.Staking.V1beta1.QueryValidatorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Validators queries all validators that match the given status.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryValidatorsResponse> ValidatorsAsync(global::Cosmos.Staking.V1beta1.QueryValidatorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Validators, null, options, request);
      }
      /// <summary>
      /// Validator queries validator info for given validator address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryValidatorResponse Validator(global::Cosmos.Staking.V1beta1.QueryValidatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Validator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Validator queries validator info for given validator address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryValidatorResponse Validator(global::Cosmos.Staking.V1beta1.QueryValidatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Validator, null, options, request);
      }
      /// <summary>
      /// Validator queries validator info for given validator address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryValidatorResponse> ValidatorAsync(global::Cosmos.Staking.V1beta1.QueryValidatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Validator queries validator info for given validator address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryValidatorResponse> ValidatorAsync(global::Cosmos.Staking.V1beta1.QueryValidatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Validator, null, options, request);
      }
      /// <summary>
      /// ValidatorDelegations queries delegate info for given validator.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsResponse ValidatorDelegations(global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorDelegations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ValidatorDelegations queries delegate info for given validator.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsResponse ValidatorDelegations(global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidatorDelegations, null, options, request);
      }
      /// <summary>
      /// ValidatorDelegations queries delegate info for given validator.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsResponse> ValidatorDelegationsAsync(global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorDelegationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ValidatorDelegations queries delegate info for given validator.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsResponse> ValidatorDelegationsAsync(global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidatorDelegations, null, options, request);
      }
      /// <summary>
      /// ValidatorUnbondingDelegations queries unbonding delegations of a validator.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsResponse ValidatorUnbondingDelegations(global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorUnbondingDelegations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ValidatorUnbondingDelegations queries unbonding delegations of a validator.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsResponse ValidatorUnbondingDelegations(global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidatorUnbondingDelegations, null, options, request);
      }
      /// <summary>
      /// ValidatorUnbondingDelegations queries unbonding delegations of a validator.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsResponse> ValidatorUnbondingDelegationsAsync(global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidatorUnbondingDelegationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ValidatorUnbondingDelegations queries unbonding delegations of a validator.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsResponse> ValidatorUnbondingDelegationsAsync(global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidatorUnbondingDelegations, null, options, request);
      }
      /// <summary>
      /// Delegation queries delegate info for given validator delegator pair.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryDelegationResponse Delegation(global::Cosmos.Staking.V1beta1.QueryDelegationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delegation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delegation queries delegate info for given validator delegator pair.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryDelegationResponse Delegation(global::Cosmos.Staking.V1beta1.QueryDelegationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delegation, null, options, request);
      }
      /// <summary>
      /// Delegation queries delegate info for given validator delegator pair.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryDelegationResponse> DelegationAsync(global::Cosmos.Staking.V1beta1.QueryDelegationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delegation queries delegate info for given validator delegator pair.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryDelegationResponse> DelegationAsync(global::Cosmos.Staking.V1beta1.QueryDelegationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delegation, null, options, request);
      }
      /// <summary>
      /// UnbondingDelegation queries unbonding info for given validator delegator
      /// pair.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationResponse UnbondingDelegation(global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnbondingDelegation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UnbondingDelegation queries unbonding info for given validator delegator
      /// pair.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationResponse UnbondingDelegation(global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnbondingDelegation, null, options, request);
      }
      /// <summary>
      /// UnbondingDelegation queries unbonding info for given validator delegator
      /// pair.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationResponse> UnbondingDelegationAsync(global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnbondingDelegationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UnbondingDelegation queries unbonding info for given validator delegator
      /// pair.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationResponse> UnbondingDelegationAsync(global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnbondingDelegation, null, options, request);
      }
      /// <summary>
      /// DelegatorDelegations queries all delegations of a given delegator address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsResponse DelegatorDelegations(global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegatorDelegations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegatorDelegations queries all delegations of a given delegator address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsResponse DelegatorDelegations(global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DelegatorDelegations, null, options, request);
      }
      /// <summary>
      /// DelegatorDelegations queries all delegations of a given delegator address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsResponse> DelegatorDelegationsAsync(global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegatorDelegationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegatorDelegations queries all delegations of a given delegator address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsResponse> DelegatorDelegationsAsync(global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DelegatorDelegations, null, options, request);
      }
      /// <summary>
      /// DelegatorUnbondingDelegations queries all unbonding delegations of a given
      /// delegator address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsResponse DelegatorUnbondingDelegations(global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegatorUnbondingDelegations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegatorUnbondingDelegations queries all unbonding delegations of a given
      /// delegator address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsResponse DelegatorUnbondingDelegations(global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DelegatorUnbondingDelegations, null, options, request);
      }
      /// <summary>
      /// DelegatorUnbondingDelegations queries all unbonding delegations of a given
      /// delegator address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsResponse> DelegatorUnbondingDelegationsAsync(global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegatorUnbondingDelegationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegatorUnbondingDelegations queries all unbonding delegations of a given
      /// delegator address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsResponse> DelegatorUnbondingDelegationsAsync(global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DelegatorUnbondingDelegations, null, options, request);
      }
      /// <summary>
      /// Redelegations queries redelegations of given address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryRedelegationsResponse Redelegations(global::Cosmos.Staking.V1beta1.QueryRedelegationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Redelegations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Redelegations queries redelegations of given address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryRedelegationsResponse Redelegations(global::Cosmos.Staking.V1beta1.QueryRedelegationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Redelegations, null, options, request);
      }
      /// <summary>
      /// Redelegations queries redelegations of given address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryRedelegationsResponse> RedelegationsAsync(global::Cosmos.Staking.V1beta1.QueryRedelegationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RedelegationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Redelegations queries redelegations of given address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryRedelegationsResponse> RedelegationsAsync(global::Cosmos.Staking.V1beta1.QueryRedelegationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Redelegations, null, options, request);
      }
      /// <summary>
      /// DelegatorValidators queries all validators info for given delegator
      /// address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsResponse DelegatorValidators(global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegatorValidators(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegatorValidators queries all validators info for given delegator
      /// address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsResponse DelegatorValidators(global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DelegatorValidators, null, options, request);
      }
      /// <summary>
      /// DelegatorValidators queries all validators info for given delegator
      /// address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsResponse> DelegatorValidatorsAsync(global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegatorValidatorsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegatorValidators queries all validators info for given delegator
      /// address.
      ///
      /// When called from another module, this query might consume a high amount of
      /// gas if the pagination field is incorrectly set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsResponse> DelegatorValidatorsAsync(global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DelegatorValidators, null, options, request);
      }
      /// <summary>
      /// DelegatorValidator queries validator info for given delegator validator
      /// pair.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorResponse DelegatorValidator(global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegatorValidator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegatorValidator queries validator info for given delegator validator
      /// pair.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorResponse DelegatorValidator(global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DelegatorValidator, null, options, request);
      }
      /// <summary>
      /// DelegatorValidator queries validator info for given delegator validator
      /// pair.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorResponse> DelegatorValidatorAsync(global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DelegatorValidatorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DelegatorValidator queries validator info for given delegator validator
      /// pair.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorResponse> DelegatorValidatorAsync(global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DelegatorValidator, null, options, request);
      }
      /// <summary>
      /// HistoricalInfo queries the historical info for given height.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryHistoricalInfoResponse HistoricalInfo(global::Cosmos.Staking.V1beta1.QueryHistoricalInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HistoricalInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// HistoricalInfo queries the historical info for given height.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryHistoricalInfoResponse HistoricalInfo(global::Cosmos.Staking.V1beta1.QueryHistoricalInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_HistoricalInfo, null, options, request);
      }
      /// <summary>
      /// HistoricalInfo queries the historical info for given height.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryHistoricalInfoResponse> HistoricalInfoAsync(global::Cosmos.Staking.V1beta1.QueryHistoricalInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HistoricalInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// HistoricalInfo queries the historical info for given height.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryHistoricalInfoResponse> HistoricalInfoAsync(global::Cosmos.Staking.V1beta1.QueryHistoricalInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_HistoricalInfo, null, options, request);
      }
      /// <summary>
      /// Pool queries the pool info.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryPoolResponse Pool(global::Cosmos.Staking.V1beta1.QueryPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Pool(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Pool queries the pool info.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryPoolResponse Pool(global::Cosmos.Staking.V1beta1.QueryPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Pool, null, options, request);
      }
      /// <summary>
      /// Pool queries the pool info.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryPoolResponse> PoolAsync(global::Cosmos.Staking.V1beta1.QueryPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PoolAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Pool queries the pool info.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryPoolResponse> PoolAsync(global::Cosmos.Staking.V1beta1.QueryPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Pool, null, options, request);
      }
      /// <summary>
      /// Parameters queries the staking parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryParamsResponse Params(global::Cosmos.Staking.V1beta1.QueryParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Params(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Parameters queries the staking parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Staking.V1beta1.QueryParamsResponse Params(global::Cosmos.Staking.V1beta1.QueryParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Params, null, options, request);
      }
      /// <summary>
      /// Parameters queries the staking parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryParamsResponse> ParamsAsync(global::Cosmos.Staking.V1beta1.QueryParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ParamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Parameters queries the staking parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Staking.V1beta1.QueryParamsResponse> ParamsAsync(global::Cosmos.Staking.V1beta1.QueryParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Params, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override QueryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new QueryClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(QueryBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Validators, serviceImpl.Validators)
          .AddMethod(__Method_Validator, serviceImpl.Validator)
          .AddMethod(__Method_ValidatorDelegations, serviceImpl.ValidatorDelegations)
          .AddMethod(__Method_ValidatorUnbondingDelegations, serviceImpl.ValidatorUnbondingDelegations)
          .AddMethod(__Method_Delegation, serviceImpl.Delegation)
          .AddMethod(__Method_UnbondingDelegation, serviceImpl.UnbondingDelegation)
          .AddMethod(__Method_DelegatorDelegations, serviceImpl.DelegatorDelegations)
          .AddMethod(__Method_DelegatorUnbondingDelegations, serviceImpl.DelegatorUnbondingDelegations)
          .AddMethod(__Method_Redelegations, serviceImpl.Redelegations)
          .AddMethod(__Method_DelegatorValidators, serviceImpl.DelegatorValidators)
          .AddMethod(__Method_DelegatorValidator, serviceImpl.DelegatorValidator)
          .AddMethod(__Method_HistoricalInfo, serviceImpl.HistoricalInfo)
          .AddMethod(__Method_Pool, serviceImpl.Pool)
          .AddMethod(__Method_Params, serviceImpl.Params).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, QueryBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Validators, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryValidatorsRequest, global::Cosmos.Staking.V1beta1.QueryValidatorsResponse>(serviceImpl.Validators));
      serviceBinder.AddMethod(__Method_Validator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryValidatorRequest, global::Cosmos.Staking.V1beta1.QueryValidatorResponse>(serviceImpl.Validator));
      serviceBinder.AddMethod(__Method_ValidatorDelegations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsRequest, global::Cosmos.Staking.V1beta1.QueryValidatorDelegationsResponse>(serviceImpl.ValidatorDelegations));
      serviceBinder.AddMethod(__Method_ValidatorUnbondingDelegations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsRequest, global::Cosmos.Staking.V1beta1.QueryValidatorUnbondingDelegationsResponse>(serviceImpl.ValidatorUnbondingDelegations));
      serviceBinder.AddMethod(__Method_Delegation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryDelegationRequest, global::Cosmos.Staking.V1beta1.QueryDelegationResponse>(serviceImpl.Delegation));
      serviceBinder.AddMethod(__Method_UnbondingDelegation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationRequest, global::Cosmos.Staking.V1beta1.QueryUnbondingDelegationResponse>(serviceImpl.UnbondingDelegation));
      serviceBinder.AddMethod(__Method_DelegatorDelegations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsRequest, global::Cosmos.Staking.V1beta1.QueryDelegatorDelegationsResponse>(serviceImpl.DelegatorDelegations));
      serviceBinder.AddMethod(__Method_DelegatorUnbondingDelegations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsRequest, global::Cosmos.Staking.V1beta1.QueryDelegatorUnbondingDelegationsResponse>(serviceImpl.DelegatorUnbondingDelegations));
      serviceBinder.AddMethod(__Method_Redelegations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryRedelegationsRequest, global::Cosmos.Staking.V1beta1.QueryRedelegationsResponse>(serviceImpl.Redelegations));
      serviceBinder.AddMethod(__Method_DelegatorValidators, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsRequest, global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorsResponse>(serviceImpl.DelegatorValidators));
      serviceBinder.AddMethod(__Method_DelegatorValidator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorRequest, global::Cosmos.Staking.V1beta1.QueryDelegatorValidatorResponse>(serviceImpl.DelegatorValidator));
      serviceBinder.AddMethod(__Method_HistoricalInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryHistoricalInfoRequest, global::Cosmos.Staking.V1beta1.QueryHistoricalInfoResponse>(serviceImpl.HistoricalInfo));
      serviceBinder.AddMethod(__Method_Pool, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryPoolRequest, global::Cosmos.Staking.V1beta1.QueryPoolResponse>(serviceImpl.Pool));
      serviceBinder.AddMethod(__Method_Params, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cosmos.Staking.V1beta1.QueryParamsRequest, global::Cosmos.Staking.V1beta1.QueryParamsResponse>(serviceImpl.Params));
    }

  }
}
#endregion
