// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmos/upgrade/v1beta1/query.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cosmos.Upgrade.V1beta1 {
  /// <summary>
  /// Query defines the gRPC upgrade querier service.
  /// </summary>
  public static partial class Query
  {
    static readonly string __ServiceName = "cosmos.upgrade.v1beta1.Query";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanRequest> __Marshaller_cosmos_upgrade_v1beta1_QueryCurrentPlanRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanResponse> __Marshaller_cosmos_upgrade_v1beta1_QueryCurrentPlanResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanRequest> __Marshaller_cosmos_upgrade_v1beta1_QueryAppliedPlanRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanResponse> __Marshaller_cosmos_upgrade_v1beta1_QueryAppliedPlanResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateRequest> __Marshaller_cosmos_upgrade_v1beta1_QueryUpgradedConsensusStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateResponse> __Marshaller_cosmos_upgrade_v1beta1_QueryUpgradedConsensusStateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsRequest> __Marshaller_cosmos_upgrade_v1beta1_QueryModuleVersionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsResponse> __Marshaller_cosmos_upgrade_v1beta1_QueryModuleVersionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Upgrade.V1beta1.QueryAuthorityRequest> __Marshaller_cosmos_upgrade_v1beta1_QueryAuthorityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Upgrade.V1beta1.QueryAuthorityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cosmos.Upgrade.V1beta1.QueryAuthorityResponse> __Marshaller_cosmos_upgrade_v1beta1_QueryAuthorityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cosmos.Upgrade.V1beta1.QueryAuthorityResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanRequest, global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanResponse> __Method_CurrentPlan = new grpc::Method<global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanRequest, global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CurrentPlan",
        __Marshaller_cosmos_upgrade_v1beta1_QueryCurrentPlanRequest,
        __Marshaller_cosmos_upgrade_v1beta1_QueryCurrentPlanResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanRequest, global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanResponse> __Method_AppliedPlan = new grpc::Method<global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanRequest, global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AppliedPlan",
        __Marshaller_cosmos_upgrade_v1beta1_QueryAppliedPlanRequest,
        __Marshaller_cosmos_upgrade_v1beta1_QueryAppliedPlanResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateRequest, global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateResponse> __Method_UpgradedConsensusState = new grpc::Method<global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateRequest, global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpgradedConsensusState",
        __Marshaller_cosmos_upgrade_v1beta1_QueryUpgradedConsensusStateRequest,
        __Marshaller_cosmos_upgrade_v1beta1_QueryUpgradedConsensusStateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsRequest, global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsResponse> __Method_ModuleVersions = new grpc::Method<global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsRequest, global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ModuleVersions",
        __Marshaller_cosmos_upgrade_v1beta1_QueryModuleVersionsRequest,
        __Marshaller_cosmos_upgrade_v1beta1_QueryModuleVersionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cosmos.Upgrade.V1beta1.QueryAuthorityRequest, global::Cosmos.Upgrade.V1beta1.QueryAuthorityResponse> __Method_Authority = new grpc::Method<global::Cosmos.Upgrade.V1beta1.QueryAuthorityRequest, global::Cosmos.Upgrade.V1beta1.QueryAuthorityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Authority",
        __Marshaller_cosmos_upgrade_v1beta1_QueryAuthorityRequest,
        __Marshaller_cosmos_upgrade_v1beta1_QueryAuthorityResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cosmos.Upgrade.V1beta1.QueryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Query</summary>
    public partial class QueryClient : grpc::ClientBase<QueryClient>
    {
      /// <summary>Creates a new client for Query</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Query that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// CurrentPlan queries the current upgrade plan.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanResponse CurrentPlan(global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CurrentPlan(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CurrentPlan queries the current upgrade plan.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanResponse CurrentPlan(global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CurrentPlan, null, options, request);
      }
      /// <summary>
      /// CurrentPlan queries the current upgrade plan.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanResponse> CurrentPlanAsync(global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CurrentPlanAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CurrentPlan queries the current upgrade plan.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanResponse> CurrentPlanAsync(global::Cosmos.Upgrade.V1beta1.QueryCurrentPlanRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CurrentPlan, null, options, request);
      }
      /// <summary>
      /// AppliedPlan queries a previously applied upgrade plan by its name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanResponse AppliedPlan(global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AppliedPlan(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AppliedPlan queries a previously applied upgrade plan by its name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanResponse AppliedPlan(global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AppliedPlan, null, options, request);
      }
      /// <summary>
      /// AppliedPlan queries a previously applied upgrade plan by its name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanResponse> AppliedPlanAsync(global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AppliedPlanAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// AppliedPlan queries a previously applied upgrade plan by its name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanResponse> AppliedPlanAsync(global::Cosmos.Upgrade.V1beta1.QueryAppliedPlanRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AppliedPlan, null, options, request);
      }
      /// <summary>
      /// UpgradedConsensusState queries the consensus state that will serve
      /// as a trusted kernel for the next version of this chain. It will only be
      /// stored at the last height of this chain.
      /// UpgradedConsensusState RPC not supported with legacy querier
      /// This rpc is deprecated now that IBC has its own replacement
      /// (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateResponse UpgradedConsensusState(global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpgradedConsensusState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpgradedConsensusState queries the consensus state that will serve
      /// as a trusted kernel for the next version of this chain. It will only be
      /// stored at the last height of this chain.
      /// UpgradedConsensusState RPC not supported with legacy querier
      /// This rpc is deprecated now that IBC has its own replacement
      /// (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateResponse UpgradedConsensusState(global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpgradedConsensusState, null, options, request);
      }
      /// <summary>
      /// UpgradedConsensusState queries the consensus state that will serve
      /// as a trusted kernel for the next version of this chain. It will only be
      /// stored at the last height of this chain.
      /// UpgradedConsensusState RPC not supported with legacy querier
      /// This rpc is deprecated now that IBC has its own replacement
      /// (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateResponse> UpgradedConsensusStateAsync(global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpgradedConsensusStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpgradedConsensusState queries the consensus state that will serve
      /// as a trusted kernel for the next version of this chain. It will only be
      /// stored at the last height of this chain.
      /// UpgradedConsensusState RPC not supported with legacy querier
      /// This rpc is deprecated now that IBC has its own replacement
      /// (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateResponse> UpgradedConsensusStateAsync(global::Cosmos.Upgrade.V1beta1.QueryUpgradedConsensusStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpgradedConsensusState, null, options, request);
      }
      /// <summary>
      /// ModuleVersions queries the list of module versions from state.
      ///
      /// Since: cosmos-sdk 0.43
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsResponse ModuleVersions(global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModuleVersions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ModuleVersions queries the list of module versions from state.
      ///
      /// Since: cosmos-sdk 0.43
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsResponse ModuleVersions(global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ModuleVersions, null, options, request);
      }
      /// <summary>
      /// ModuleVersions queries the list of module versions from state.
      ///
      /// Since: cosmos-sdk 0.43
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsResponse> ModuleVersionsAsync(global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModuleVersionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ModuleVersions queries the list of module versions from state.
      ///
      /// Since: cosmos-sdk 0.43
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsResponse> ModuleVersionsAsync(global::Cosmos.Upgrade.V1beta1.QueryModuleVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ModuleVersions, null, options, request);
      }
      /// <summary>
      /// Returns the account with authority to conduct upgrades
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Upgrade.V1beta1.QueryAuthorityResponse Authority(global::Cosmos.Upgrade.V1beta1.QueryAuthorityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Authority(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the account with authority to conduct upgrades
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cosmos.Upgrade.V1beta1.QueryAuthorityResponse Authority(global::Cosmos.Upgrade.V1beta1.QueryAuthorityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Authority, null, options, request);
      }
      /// <summary>
      /// Returns the account with authority to conduct upgrades
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Upgrade.V1beta1.QueryAuthorityResponse> AuthorityAsync(global::Cosmos.Upgrade.V1beta1.QueryAuthorityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AuthorityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the account with authority to conduct upgrades
      ///
      /// Since: cosmos-sdk 0.46
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cosmos.Upgrade.V1beta1.QueryAuthorityResponse> AuthorityAsync(global::Cosmos.Upgrade.V1beta1.QueryAuthorityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Authority, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override QueryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new QueryClient(configuration);
      }
    }

  }
}
#endregion
