// Code generated by lxgr
using Cosmcs.Client;
using System.Threading.Tasks;
using Google.Protobuf.WellKnownTypes;
using Google.Protobuf;

namespace Cosmos.Circuit.V1 {
	
	public class MsgClient {
		public IClient Client { get; }

		public MsgClient (IClient client) {
			Client = client;
		}

		public Task<Cosmcs.Client.ClientResponse<Cosmos.Circuit.V1.MsgAuthorizeCircuitBreakerResponse>> SendMsgAuthorizeCircuitBreaker(Cosmos.Circuit.V1.MsgAuthorizeCircuitBreaker msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.circuit.v1.MsgAuthorizeCircuitBreaker"
				}
			).ContinueWith(r => new Cosmcs.Client.ClientResponse<Cosmos.Circuit.V1.MsgAuthorizeCircuitBreakerResponse>(r.Result, Cosmos.Circuit.V1.MsgAuthorizeCircuitBreakerResponse.Parser));
		}

		public Task<Cosmcs.Client.ClientResponse<Cosmos.Circuit.V1.MsgTripCircuitBreakerResponse>> SendMsgTripCircuitBreaker(Cosmos.Circuit.V1.MsgTripCircuitBreaker msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.circuit.v1.MsgTripCircuitBreaker"
				}
			).ContinueWith(r => new Cosmcs.Client.ClientResponse<Cosmos.Circuit.V1.MsgTripCircuitBreakerResponse>(r.Result, Cosmos.Circuit.V1.MsgTripCircuitBreakerResponse.Parser));
		}

		public Task<Cosmcs.Client.ClientResponse<Cosmos.Circuit.V1.MsgResetCircuitBreakerResponse>> SendMsgResetCircuitBreaker(Cosmos.Circuit.V1.MsgResetCircuitBreaker msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.circuit.v1.MsgResetCircuitBreaker"
				}
			).ContinueWith(r => new Cosmcs.Client.ClientResponse<Cosmos.Circuit.V1.MsgResetCircuitBreakerResponse>(r.Result, Cosmos.Circuit.V1.MsgResetCircuitBreakerResponse.Parser));
		}

	}
}
