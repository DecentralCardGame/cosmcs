// Code generated by lxgr
using Cosmcs.Client;
using System.Threading.Tasks;
using Google.Protobuf.WellKnownTypes;
using Google.Protobuf;

namespace Cosmos.Distribution.V1beta1 {
	
	public class MsgClient {
		public IClient Client { get; }

		public MsgClient (IClient client) {
			Client = client;
		}

		public Task<Cosmcs.Client.ClientResponse<Cosmos.Distribution.V1beta1.MsgSetWithdrawAddressResponse>> SendMsgSetWithdrawAddress(Cosmos.Distribution.V1beta1.MsgSetWithdrawAddress msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress"
				}
			).ContinueWith(r => new Cosmcs.Client.ClientResponse<Cosmos.Distribution.V1beta1.MsgSetWithdrawAddressResponse>(r.Result, Cosmos.Distribution.V1beta1.MsgSetWithdrawAddressResponse.Parser));
		}

		public Task<Cosmcs.Client.ClientResponse<Cosmos.Distribution.V1beta1.MsgWithdrawDelegatorRewardResponse>> SendMsgWithdrawDelegatorReward(Cosmos.Distribution.V1beta1.MsgWithdrawDelegatorReward msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"
				}
			).ContinueWith(r => new Cosmcs.Client.ClientResponse<Cosmos.Distribution.V1beta1.MsgWithdrawDelegatorRewardResponse>(r.Result, Cosmos.Distribution.V1beta1.MsgWithdrawDelegatorRewardResponse.Parser));
		}

		public Task<Cosmcs.Client.ClientResponse<Cosmos.Distribution.V1beta1.MsgWithdrawValidatorCommissionResponse>> SendMsgWithdrawValidatorCommission(Cosmos.Distribution.V1beta1.MsgWithdrawValidatorCommission msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission"
				}
			).ContinueWith(r => new Cosmcs.Client.ClientResponse<Cosmos.Distribution.V1beta1.MsgWithdrawValidatorCommissionResponse>(r.Result, Cosmos.Distribution.V1beta1.MsgWithdrawValidatorCommissionResponse.Parser));
		}

		public Task<Cosmcs.Client.ClientResponse<Cosmos.Distribution.V1beta1.MsgFundCommunityPoolResponse>> SendMsgFundCommunityPool(Cosmos.Distribution.V1beta1.MsgFundCommunityPool msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.distribution.v1beta1.MsgFundCommunityPool"
				}
			).ContinueWith(r => new Cosmcs.Client.ClientResponse<Cosmos.Distribution.V1beta1.MsgFundCommunityPoolResponse>(r.Result, Cosmos.Distribution.V1beta1.MsgFundCommunityPoolResponse.Parser));
		}

		public Task<Cosmcs.Client.ClientResponse<Cosmos.Distribution.V1beta1.MsgUpdateParamsResponse>> SendMsgUpdateParams(Cosmos.Distribution.V1beta1.MsgUpdateParams msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.distribution.v1beta1.MsgUpdateParams"
				}
			).ContinueWith(r => new Cosmcs.Client.ClientResponse<Cosmos.Distribution.V1beta1.MsgUpdateParamsResponse>(r.Result, Cosmos.Distribution.V1beta1.MsgUpdateParamsResponse.Parser));
		}

		public Task<Cosmcs.Client.ClientResponse<Cosmos.Distribution.V1beta1.MsgCommunityPoolSpendResponse>> SendMsgCommunityPoolSpend(Cosmos.Distribution.V1beta1.MsgCommunityPoolSpend msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.distribution.v1beta1.MsgCommunityPoolSpend"
				}
			).ContinueWith(r => new Cosmcs.Client.ClientResponse<Cosmos.Distribution.V1beta1.MsgCommunityPoolSpendResponse>(r.Result, Cosmos.Distribution.V1beta1.MsgCommunityPoolSpendResponse.Parser));
		}

	}
}
