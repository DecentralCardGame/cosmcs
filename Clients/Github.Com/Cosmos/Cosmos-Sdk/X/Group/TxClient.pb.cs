// Code generated by lxgr
using Cosmcs.Client;
using System.Threading.Tasks;
using Google.Protobuf.WellKnownTypes;
using Google.Protobuf;

namespace Cosmos.Group.V1 {
	
	public class MsgClient {
		public IClient Client { get; }

		public MsgClient (IClient client) {
			Client = client;
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgCreateGroup(Cosmos.Group.V1.MsgCreateGroup msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgCreateGroup"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgUpdateGroupMembers(Cosmos.Group.V1.MsgUpdateGroupMembers msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgUpdateGroupMembers"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgUpdateGroupAdmin(Cosmos.Group.V1.MsgUpdateGroupAdmin msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgUpdateGroupAdmin"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgUpdateGroupMetadata(Cosmos.Group.V1.MsgUpdateGroupMetadata msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgUpdateGroupMetadata"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgCreateGroupPolicy(Cosmos.Group.V1.MsgCreateGroupPolicy msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgCreateGroupPolicy"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgCreateGroupWithPolicy(Cosmos.Group.V1.MsgCreateGroupWithPolicy msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgCreateGroupWithPolicy"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgUpdateGroupPolicyAdmin(Cosmos.Group.V1.MsgUpdateGroupPolicyAdmin msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgUpdateGroupPolicyDecisionPolicy(Cosmos.Group.V1.MsgUpdateGroupPolicyDecisionPolicy msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgUpdateGroupPolicyMetadata(Cosmos.Group.V1.MsgUpdateGroupPolicyMetadata msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgUpdateGroupPolicyMetadata"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgSubmitProposal(Cosmos.Group.V1.MsgSubmitProposal msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgSubmitProposal"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgWithdrawProposal(Cosmos.Group.V1.MsgWithdrawProposal msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgWithdrawProposal"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgVote(Cosmos.Group.V1.MsgVote msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgVote"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgExec(Cosmos.Group.V1.MsgExec msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgExec"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

		public Task<Cosmos.Base.Abci.V1beta1.TxResponse> SendMsgLeaveGroup(Cosmos.Group.V1.MsgLeaveGroup msg) {
			return Client.BuildAndBroadcast(
				new Any
				{
					Value = msg.ToByteString(),
					TypeUrl = "/cosmos.group.v1.MsgLeaveGroup"
				}
			).ContinueWith(r => Cosmos.Base.Abci.V1beta1.TxResponse.Parser.ParseJson(r.Result));
		}

	}
}
