// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmos/tx/signing/v1beta1/signing.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cosmos.Tx.Signing.V1beta1 {

  /// <summary>Holder for reflection information generated from cosmos/tx/signing/v1beta1/signing.proto</summary>
  public static partial class SigningReflection {

    #region Descriptor
    /// <summary>File descriptor for cosmos/tx/signing/v1beta1/signing.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SigningReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidjb3Ntb3MvdHgvc2lnbmluZy92MWJldGExL3NpZ25pbmcucHJvdG8SGWNv",
            "c21vcy50eC5zaWduaW5nLnYxYmV0YTEaLWNvc21vcy9jcnlwdG8vbXVsdGlz",
            "aWcvdjFiZXRhMS9tdWx0aXNpZy5wcm90bxoZZ29vZ2xlL3Byb3RvYnVmL2Fu",
            "eS5wcm90byJmChRTaWduYXR1cmVEZXNjcmlwdG9ycxJOCgpzaWduYXR1cmVz",
            "GAEgAygLMi4uY29zbW9zLnR4LnNpZ25pbmcudjFiZXRhMS5TaWduYXR1cmVE",
            "ZXNjcmlwdG9yUgpzaWduYXR1cmVzIvUEChNTaWduYXR1cmVEZXNjcmlwdG9y",
            "EjMKCnB1YmxpY19rZXkYASABKAsyFC5nb29nbGUucHJvdG9idWYuQW55Uglw",
            "dWJsaWNLZXkSRwoEZGF0YRgCIAEoCzIzLmNvc21vcy50eC5zaWduaW5nLnYx",
            "YmV0YTEuU2lnbmF0dXJlRGVzY3JpcHRvci5EYXRhUgRkYXRhEhoKCHNlcXVl",
            "bmNlGAMgASgEUghzZXF1ZW5jZRrDAwoERGF0YRJUCgZzaW5nbGUYASABKAsy",
            "Oi5jb3Ntb3MudHguc2lnbmluZy52MWJldGExLlNpZ25hdHVyZURlc2NyaXB0",
            "b3IuRGF0YS5TaW5nbGVIAFIGc2luZ2xlElEKBW11bHRpGAIgASgLMjkuY29z",
            "bW9zLnR4LnNpZ25pbmcudjFiZXRhMS5TaWduYXR1cmVEZXNjcmlwdG9yLkRh",
            "dGEuTXVsdGlIAFIFbXVsdGkaXwoGU2luZ2xlEjcKBG1vZGUYASABKA4yIy5j",
            "b3Ntb3MudHguc2lnbmluZy52MWJldGExLlNpZ25Nb2RlUgRtb2RlEhwKCXNp",
            "Z25hdHVyZRgCIAEoDFIJc2lnbmF0dXJlGqkBCgVNdWx0aRJLCghiaXRhcnJh",
            "eRgBIAEoCzIvLmNvc21vcy5jcnlwdG8ubXVsdGlzaWcudjFiZXRhMS5Db21w",
            "YWN0Qml0QXJyYXlSCGJpdGFycmF5ElMKCnNpZ25hdHVyZXMYAiADKAsyMy5j",
            "b3Ntb3MudHguc2lnbmluZy52MWJldGExLlNpZ25hdHVyZURlc2NyaXB0b3Iu",
            "RGF0YVIKc2lnbmF0dXJlc0IFCgNzdW0qpQEKCFNpZ25Nb2RlEhkKFVNJR05f",
            "TU9ERV9VTlNQRUNJRklFRBAAEhQKEFNJR05fTU9ERV9ESVJFQ1QQARIVChFT",
            "SUdOX01PREVfVEVYVFVBTBACEhgKFFNJR05fTU9ERV9ESVJFQ1RfQVVYEAMS",
            "HwobU0lHTl9NT0RFX0xFR0FDWV9BTUlOT19KU09OEH8SFgoRU0lHTl9NT0RF",
            "X0VJUF8xOTEQvwFC4wEKHWNvbS5jb3Ntb3MudHguc2lnbmluZy52MWJldGEx",
            "QgxTaWduaW5nUHJvdG9QAVotZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNk",
            "ay90eXBlcy90eC9zaWduaW5nogIDQ1RTqgIZQ29zbW9zLlR4LlNpZ25pbmcu",
            "VjFiZXRhMcoCGUNvc21vc1xUeFxTaWduaW5nXFYxYmV0YTHiAiVDb3Ntb3Nc",
            "VHhcU2lnbmluZ1xWMWJldGExXEdQQk1ldGFkYXRh6gIcQ29zbW9zOjpUeDo6",
            "U2lnbmluZzo6VjFiZXRhMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Cosmos.Crypto.Multisig.V1beta1.MultisigReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Cosmos.Tx.Signing.V1beta1.SignMode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptors), global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptors.Parser, new[]{ "Signatures" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor), global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Parser, new[]{ "PublicKey", "Data", "Sequence" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data), global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Parser, new[]{ "Single", "Multi" }, new[]{ "Sum" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Single), global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Single.Parser, new[]{ "Mode", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Multi), global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Multi.Parser, new[]{ "Bitarray", "Signatures" }, null, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// SignMode represents a signing mode with its own security guarantees.
  ///
  /// This enum should be considered a registry of all known sign modes
  /// in the Cosmos ecosystem. Apps are not expected to support all known
  /// sign modes. Apps that would like to support custom  sign modes are
  /// encouraged to open a small PR against this file to add a new case
  /// to this SignMode enum describing their sign mode so that different
  /// apps have a consistent version of this enum.
  /// </summary>
  public enum SignMode {
    /// <summary>
    /// SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
    /// rejected.
    /// </summary>
    [pbr::OriginalName("SIGN_MODE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
    /// verified with raw bytes from Tx.
    /// </summary>
    [pbr::OriginalName("SIGN_MODE_DIRECT")] Direct = 1,
    /// <summary>
    /// SIGN_MODE_TEXTUAL is a future signing mode that will verify some
    /// human-readable textual representation on top of the binary representation
    /// from SIGN_MODE_DIRECT. It is currently experimental, and should be used
    /// for testing purposes only, until Textual is fully released. Please follow
    /// the tracking issue https://github.com/cosmos/cosmos-sdk/issues/11970.
    /// </summary>
    [pbr::OriginalName("SIGN_MODE_TEXTUAL")] Textual = 2,
    /// <summary>
    /// SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
    /// SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
    /// require signers signing over other signers' `signer_info`. It also allows
    /// for adding Tips in transactions.
    ///
    /// Since: cosmos-sdk 0.46
    /// </summary>
    [pbr::OriginalName("SIGN_MODE_DIRECT_AUX")] DirectAux = 3,
    /// <summary>
    /// SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
    /// Amino JSON and will be removed in the future.
    /// </summary>
    [pbr::OriginalName("SIGN_MODE_LEGACY_AMINO_JSON")] LegacyAminoJson = 127,
    /// <summary>
    /// SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
    /// SDK. Ref: https://eips.ethereum.org/EIPS/eip-191
    ///
    /// Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
    /// but is not implemented on the SDK by default. To enable EIP-191, you need
    /// to pass a custom `TxConfig` that has an implementation of
    /// `SignModeHandler` for EIP-191. The SDK may decide to fully support
    /// EIP-191 in the future.
    ///
    /// Since: cosmos-sdk 0.45.2
    /// </summary>
    [pbr::OriginalName("SIGN_MODE_EIP_191")] Eip191 = 191,
  }

  #endregion

  #region Messages
  /// <summary>
  /// SignatureDescriptors wraps multiple SignatureDescriptor's.
  /// </summary>
  public sealed partial class SignatureDescriptors : pb::IMessage<SignatureDescriptors>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SignatureDescriptors> _parser = new pb::MessageParser<SignatureDescriptors>(() => new SignatureDescriptors());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SignatureDescriptors> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Tx.Signing.V1beta1.SigningReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignatureDescriptors() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignatureDescriptors(SignatureDescriptors other) : this() {
      signatures_ = other.signatures_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignatureDescriptors Clone() {
      return new SignatureDescriptors(this);
    }

    /// <summary>Field number for the "signatures" field.</summary>
    public const int SignaturesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor> _repeated_signatures_codec
        = pb::FieldCodec.ForMessage(10, global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Parser);
    private readonly pbc::RepeatedField<global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor> signatures_ = new pbc::RepeatedField<global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor>();
    /// <summary>
    /// signatures are the signature descriptors
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor> Signatures {
      get { return signatures_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SignatureDescriptors);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SignatureDescriptors other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!signatures_.Equals(other.signatures_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= signatures_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      signatures_.WriteTo(output, _repeated_signatures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      signatures_.WriteTo(ref output, _repeated_signatures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += signatures_.CalculateSize(_repeated_signatures_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SignatureDescriptors other) {
      if (other == null) {
        return;
      }
      signatures_.Add(other.signatures_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            signatures_.AddEntriesFrom(input, _repeated_signatures_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            signatures_.AddEntriesFrom(ref input, _repeated_signatures_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// SignatureDescriptor is a convenience type which represents the full data for
  /// a signature including the public key of the signer, signing modes and the
  /// signature itself. It is primarily used for coordinating signatures between
  /// clients.
  /// </summary>
  public sealed partial class SignatureDescriptor : pb::IMessage<SignatureDescriptor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SignatureDescriptor> _parser = new pb::MessageParser<SignatureDescriptor>(() => new SignatureDescriptor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SignatureDescriptor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Tx.Signing.V1beta1.SigningReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignatureDescriptor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignatureDescriptor(SignatureDescriptor other) : this() {
      publicKey_ = other.publicKey_ != null ? other.publicKey_.Clone() : null;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      sequence_ = other.sequence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignatureDescriptor Clone() {
      return new SignatureDescriptor(this);
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Any publicKey_;
    /// <summary>
    /// public_key is the public key of the signer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Any PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 3;
    private ulong sequence_;
    /// <summary>
    /// sequence is the sequence of the account, which describes the
    /// number of committed transactions signed by a given address. It is used to prevent
    /// replay attacks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SignatureDescriptor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SignatureDescriptor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PublicKey, other.PublicKey)) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (Sequence != other.Sequence) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (publicKey_ != null) hash ^= PublicKey.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (Sequence != 0UL) hash ^= Sequence.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (publicKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PublicKey);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Sequence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (publicKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PublicKey);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Sequence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (publicKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicKey);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (Sequence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sequence);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SignatureDescriptor other) {
      if (other == null) {
        return;
      }
      if (other.publicKey_ != null) {
        if (publicKey_ == null) {
          PublicKey = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        PublicKey.MergeFrom(other.PublicKey);
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.Sequence != 0UL) {
        Sequence = other.Sequence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (publicKey_ == null) {
              PublicKey = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(PublicKey);
            break;
          }
          case 18: {
            if (data_ == null) {
              Data = new global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data();
            }
            input.ReadMessage(Data);
            break;
          }
          case 24: {
            Sequence = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (publicKey_ == null) {
              PublicKey = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(PublicKey);
            break;
          }
          case 18: {
            if (data_ == null) {
              Data = new global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data();
            }
            input.ReadMessage(Data);
            break;
          }
          case 24: {
            Sequence = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SignatureDescriptor message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Data represents signature data
      /// </summary>
      public sealed partial class Data : pb::IMessage<Data>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Data> _parser = new pb::MessageParser<Data>(() => new Data());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Data> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Data() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Data(Data other) : this() {
          switch (other.SumCase) {
            case SumOneofCase.Single:
              Single = other.Single.Clone();
              break;
            case SumOneofCase.Multi:
              Multi = other.Multi.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Data Clone() {
          return new Data(this);
        }

        /// <summary>Field number for the "single" field.</summary>
        public const int SingleFieldNumber = 1;
        /// <summary>
        /// single represents a single signer
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Single Single {
          get { return sumCase_ == SumOneofCase.Single ? (global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Single) sum_ : null; }
          set {
            sum_ = value;
            sumCase_ = value == null ? SumOneofCase.None : SumOneofCase.Single;
          }
        }

        /// <summary>Field number for the "multi" field.</summary>
        public const int MultiFieldNumber = 2;
        /// <summary>
        /// multi represents a multisig signer
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Multi Multi {
          get { return sumCase_ == SumOneofCase.Multi ? (global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Multi) sum_ : null; }
          set {
            sum_ = value;
            sumCase_ = value == null ? SumOneofCase.None : SumOneofCase.Multi;
          }
        }

        private object sum_;
        /// <summary>Enum of possible cases for the "sum" oneof.</summary>
        public enum SumOneofCase {
          None = 0,
          Single = 1,
          Multi = 2,
        }
        private SumOneofCase sumCase_ = SumOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SumOneofCase SumCase {
          get { return sumCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSum() {
          sumCase_ = SumOneofCase.None;
          sum_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Data);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Data other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Single, other.Single)) return false;
          if (!object.Equals(Multi, other.Multi)) return false;
          if (SumCase != other.SumCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (sumCase_ == SumOneofCase.Single) hash ^= Single.GetHashCode();
          if (sumCase_ == SumOneofCase.Multi) hash ^= Multi.GetHashCode();
          hash ^= (int) sumCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (sumCase_ == SumOneofCase.Single) {
            output.WriteRawTag(10);
            output.WriteMessage(Single);
          }
          if (sumCase_ == SumOneofCase.Multi) {
            output.WriteRawTag(18);
            output.WriteMessage(Multi);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (sumCase_ == SumOneofCase.Single) {
            output.WriteRawTag(10);
            output.WriteMessage(Single);
          }
          if (sumCase_ == SumOneofCase.Multi) {
            output.WriteRawTag(18);
            output.WriteMessage(Multi);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (sumCase_ == SumOneofCase.Single) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Single);
          }
          if (sumCase_ == SumOneofCase.Multi) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Multi);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Data other) {
          if (other == null) {
            return;
          }
          switch (other.SumCase) {
            case SumOneofCase.Single:
              if (Single == null) {
                Single = new global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Single();
              }
              Single.MergeFrom(other.Single);
              break;
            case SumOneofCase.Multi:
              if (Multi == null) {
                Multi = new global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Multi();
              }
              Multi.MergeFrom(other.Multi);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Single subBuilder = new global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Single();
                if (sumCase_ == SumOneofCase.Single) {
                  subBuilder.MergeFrom(Single);
                }
                input.ReadMessage(subBuilder);
                Single = subBuilder;
                break;
              }
              case 18: {
                global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Multi subBuilder = new global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Multi();
                if (sumCase_ == SumOneofCase.Multi) {
                  subBuilder.MergeFrom(Multi);
                }
                input.ReadMessage(subBuilder);
                Multi = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Single subBuilder = new global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Single();
                if (sumCase_ == SumOneofCase.Single) {
                  subBuilder.MergeFrom(Single);
                }
                input.ReadMessage(subBuilder);
                Single = subBuilder;
                break;
              }
              case 18: {
                global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Multi subBuilder = new global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Types.Multi();
                if (sumCase_ == SumOneofCase.Multi) {
                  subBuilder.MergeFrom(Multi);
                }
                input.ReadMessage(subBuilder);
                Multi = subBuilder;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Data message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Single is the signature data for a single signer
          /// </summary>
          public sealed partial class Single : pb::IMessage<Single>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Single> _parser = new pb::MessageParser<Single>(() => new Single());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Single> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Single() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Single(Single other) : this() {
              mode_ = other.mode_;
              signature_ = other.signature_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Single Clone() {
              return new Single(this);
            }

            /// <summary>Field number for the "mode" field.</summary>
            public const int ModeFieldNumber = 1;
            private global::Cosmos.Tx.Signing.V1beta1.SignMode mode_ = global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified;
            /// <summary>
            /// mode is the signing mode of the single signer
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Cosmos.Tx.Signing.V1beta1.SignMode Mode {
              get { return mode_; }
              set {
                mode_ = value;
              }
            }

            /// <summary>Field number for the "signature" field.</summary>
            public const int SignatureFieldNumber = 2;
            private pb::ByteString signature_ = pb::ByteString.Empty;
            /// <summary>
            /// signature is the raw signature bytes
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pb::ByteString Signature {
              get { return signature_; }
              set {
                signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Single);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Single other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Mode != other.Mode) return false;
              if (Signature != other.Signature) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) hash ^= Mode.GetHashCode();
              if (Signature.Length != 0) hash ^= Signature.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) {
                output.WriteRawTag(8);
                output.WriteEnum((int) Mode);
              }
              if (Signature.Length != 0) {
                output.WriteRawTag(18);
                output.WriteBytes(Signature);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) {
                output.WriteRawTag(8);
                output.WriteEnum((int) Mode);
              }
              if (Signature.Length != 0) {
                output.WriteRawTag(18);
                output.WriteBytes(Signature);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
              }
              if (Signature.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Single other) {
              if (other == null) {
                return;
              }
              if (other.Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) {
                Mode = other.Mode;
              }
              if (other.Signature.Length != 0) {
                Signature = other.Signature;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Mode = (global::Cosmos.Tx.Signing.V1beta1.SignMode) input.ReadEnum();
                    break;
                  }
                  case 18: {
                    Signature = input.ReadBytes();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Mode = (global::Cosmos.Tx.Signing.V1beta1.SignMode) input.ReadEnum();
                    break;
                  }
                  case 18: {
                    Signature = input.ReadBytes();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Multi is the signature data for a multisig public key
          /// </summary>
          public sealed partial class Multi : pb::IMessage<Multi>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Multi> _parser = new pb::MessageParser<Multi>(() => new Multi());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Multi> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Multi() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Multi(Multi other) : this() {
              bitarray_ = other.bitarray_ != null ? other.bitarray_.Clone() : null;
              signatures_ = other.signatures_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Multi Clone() {
              return new Multi(this);
            }

            /// <summary>Field number for the "bitarray" field.</summary>
            public const int BitarrayFieldNumber = 1;
            private global::Cosmos.Crypto.Multisig.V1beta1.CompactBitArray bitarray_;
            /// <summary>
            /// bitarray specifies which keys within the multisig are signing
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Cosmos.Crypto.Multisig.V1beta1.CompactBitArray Bitarray {
              get { return bitarray_; }
              set {
                bitarray_ = value;
              }
            }

            /// <summary>Field number for the "signatures" field.</summary>
            public const int SignaturesFieldNumber = 2;
            private static readonly pb::FieldCodec<global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data> _repeated_signatures_codec
                = pb::FieldCodec.ForMessage(18, global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data.Parser);
            private readonly pbc::RepeatedField<global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data> signatures_ = new pbc::RepeatedField<global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data>();
            /// <summary>
            /// signatures is the signatures of the multi-signature
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Cosmos.Tx.Signing.V1beta1.SignatureDescriptor.Types.Data> Signatures {
              get { return signatures_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Multi);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Multi other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Bitarray, other.Bitarray)) return false;
              if(!signatures_.Equals(other.signatures_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (bitarray_ != null) hash ^= Bitarray.GetHashCode();
              hash ^= signatures_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (bitarray_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Bitarray);
              }
              signatures_.WriteTo(output, _repeated_signatures_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (bitarray_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Bitarray);
              }
              signatures_.WriteTo(ref output, _repeated_signatures_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (bitarray_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bitarray);
              }
              size += signatures_.CalculateSize(_repeated_signatures_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Multi other) {
              if (other == null) {
                return;
              }
              if (other.bitarray_ != null) {
                if (bitarray_ == null) {
                  Bitarray = new global::Cosmos.Crypto.Multisig.V1beta1.CompactBitArray();
                }
                Bitarray.MergeFrom(other.Bitarray);
              }
              signatures_.Add(other.signatures_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (bitarray_ == null) {
                      Bitarray = new global::Cosmos.Crypto.Multisig.V1beta1.CompactBitArray();
                    }
                    input.ReadMessage(Bitarray);
                    break;
                  }
                  case 18: {
                    signatures_.AddEntriesFrom(input, _repeated_signatures_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (bitarray_ == null) {
                      Bitarray = new global::Cosmos.Crypto.Multisig.V1beta1.CompactBitArray();
                    }
                    input.ReadMessage(Bitarray);
                    break;
                  }
                  case 18: {
                    signatures_.AddEntriesFrom(ref input, _repeated_signatures_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
