// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmos/tx/v1beta1/tx.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cosmos.Tx.V1beta1 {

  /// <summary>Holder for reflection information generated from cosmos/tx/v1beta1/tx.proto</summary>
  public static partial class TxReflection {

    #region Descriptor
    /// <summary>File descriptor for cosmos/tx/v1beta1/tx.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TxReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpjb3Ntb3MvdHgvdjFiZXRhMS90eC5wcm90bxIRY29zbW9zLnR4LnYxYmV0",
            "YTEaEWFtaW5vL2FtaW5vLnByb3RvGhRnb2dvcHJvdG8vZ29nby5wcm90bxot",
            "Y29zbW9zL2NyeXB0by9tdWx0aXNpZy92MWJldGExL211bHRpc2lnLnByb3Rv",
            "Gh5jb3Ntb3MvYmFzZS92MWJldGExL2NvaW4ucHJvdG8aJ2Nvc21vcy90eC9z",
            "aWduaW5nL3YxYmV0YTEvc2lnbmluZy5wcm90bxoZZ29vZ2xlL3Byb3RvYnVm",
            "L2FueS5wcm90bxoZY29zbW9zX3Byb3RvL2Nvc21vcy5wcm90byKNAQoCVHgS",
            "LQoEYm9keRgBIAEoCzIZLmNvc21vcy50eC52MWJldGExLlR4Qm9keVIEYm9k",
            "eRI4CglhdXRoX2luZm8YAiABKAsyGy5jb3Ntb3MudHgudjFiZXRhMS5BdXRo",
            "SW5mb1IIYXV0aEluZm8SHgoKc2lnbmF0dXJlcxgDIAMoDFIKc2lnbmF0dXJl",
            "cyJuCgVUeFJhdxIdCgpib2R5X2J5dGVzGAEgASgMUglib2R5Qnl0ZXMSJgoP",
            "YXV0aF9pbmZvX2J5dGVzGAIgASgMUg1hdXRoSW5mb0J5dGVzEh4KCnNpZ25h",
            "dHVyZXMYAyADKAxSCnNpZ25hdHVyZXMikgEKB1NpZ25Eb2MSHQoKYm9keV9i",
            "eXRlcxgBIAEoDFIJYm9keUJ5dGVzEiYKD2F1dGhfaW5mb19ieXRlcxgCIAEo",
            "DFINYXV0aEluZm9CeXRlcxIZCghjaGFpbl9pZBgDIAEoCVIHY2hhaW5JZBIl",
            "Cg5hY2NvdW50X251bWJlchgEIAEoBFINYWNjb3VudE51bWJlciLuAQoQU2ln",
            "bkRvY0RpcmVjdEF1eBIdCgpib2R5X2J5dGVzGAEgASgMUglib2R5Qnl0ZXMS",
            "MwoKcHVibGljX2tleRgCIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnlSCXB1",
            "YmxpY0tleRIZCghjaGFpbl9pZBgDIAEoCVIHY2hhaW5JZBIlCg5hY2NvdW50",
            "X251bWJlchgEIAEoBFINYWNjb3VudE51bWJlchIaCghzZXF1ZW5jZRgFIAEo",
            "BFIIc2VxdWVuY2USKAoDdGlwGAYgASgLMhYuY29zbW9zLnR4LnYxYmV0YTEu",
            "VGlwUgN0aXAilQIKBlR4Qm9keRIwCghtZXNzYWdlcxgBIAMoCzIULmdvb2ds",
            "ZS5wcm90b2J1Zi5BbnlSCG1lc3NhZ2VzEhIKBG1lbW8YAiABKAlSBG1lbW8S",
            "JQoOdGltZW91dF9oZWlnaHQYAyABKARSDXRpbWVvdXRIZWlnaHQSQgoRZXh0",
            "ZW5zaW9uX29wdGlvbnMY/wcgAygLMhQuZ29vZ2xlLnByb3RvYnVmLkFueVIQ",
            "ZXh0ZW5zaW9uT3B0aW9ucxJaCh5ub25fY3JpdGljYWxfZXh0ZW5zaW9uX29w",
            "dGlvbnMY/w8gAygLMhQuZ29vZ2xlLnByb3RvYnVmLkFueVIbbm9uQ3JpdGlj",
            "YWxFeHRlbnNpb25PcHRpb25zIqABCghBdXRoSW5mbxJACgxzaWduZXJfaW5m",
            "b3MYASADKAsyHS5jb3Ntb3MudHgudjFiZXRhMS5TaWduZXJJbmZvUgtzaWdu",
            "ZXJJbmZvcxIoCgNmZWUYAiABKAsyFi5jb3Ntb3MudHgudjFiZXRhMS5GZWVS",
            "A2ZlZRIoCgN0aXAYAyABKAsyFi5jb3Ntb3MudHgudjFiZXRhMS5UaXBSA3Rp",
            "cCKXAQoKU2lnbmVySW5mbxIzCgpwdWJsaWNfa2V5GAEgASgLMhQuZ29vZ2xl",
            "LnByb3RvYnVmLkFueVIJcHVibGljS2V5EjgKCW1vZGVfaW5mbxgCIAEoCzIb",
            "LmNvc21vcy50eC52MWJldGExLk1vZGVJbmZvUghtb2RlSW5mbxIaCghzZXF1",
            "ZW5jZRgDIAEoBFIIc2VxdWVuY2Ui4AIKCE1vZGVJbmZvEjwKBnNpbmdsZRgB",
            "IAEoCzIiLmNvc21vcy50eC52MWJldGExLk1vZGVJbmZvLlNpbmdsZUgAUgZz",
            "aW5nbGUSOQoFbXVsdGkYAiABKAsyIS5jb3Ntb3MudHgudjFiZXRhMS5Nb2Rl",
            "SW5mby5NdWx0aUgAUgVtdWx0aRpBCgZTaW5nbGUSNwoEbW9kZRgBIAEoDjIj",
            "LmNvc21vcy50eC5zaWduaW5nLnYxYmV0YTEuU2lnbk1vZGVSBG1vZGUakAEK",
            "BU11bHRpEksKCGJpdGFycmF5GAEgASgLMi8uY29zbW9zLmNyeXB0by5tdWx0",
            "aXNpZy52MWJldGExLkNvbXBhY3RCaXRBcnJheVIIYml0YXJyYXkSOgoKbW9k",
            "ZV9pbmZvcxgCIAMoCzIbLmNvc21vcy50eC52MWJldGExLk1vZGVJbmZvUglt",
            "b2RlSW5mb3NCBQoDc3VtIoECCgNGZWUSeQoGYW1vdW50GAEgAygLMhkuY29z",
            "bW9zLmJhc2UudjFiZXRhMS5Db2luQkbI3h8Aqt8fKGdpdGh1Yi5jb20vY29z",
            "bW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnOa57AqDGxlZ2FjeV9jb2luc6jn",
            "sCoBUgZhbW91bnQSGwoJZ2FzX2xpbWl0GAIgASgEUghnYXNMaW1pdBIuCgVw",
            "YXllchgDIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUgVwYXllchIy",
            "CgdncmFudGVyGAQgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmdSB2dy",
            "YW50ZXIisgEKA1RpcBJ5CgZhbW91bnQYASADKAsyGS5jb3Ntb3MuYmFzZS52",
            "MWJldGExLkNvaW5CRsjeHwCq3x8oZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9z",
            "LXNkay90eXBlcy5Db2luc5rnsCoMbGVnYWN5X2NvaW5zqOewKgFSBmFtb3Vu",
            "dBIwCgZ0aXBwZXIYAiABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZ1IG",
            "dGlwcGVyIs4BCg1BdXhTaWduZXJEYXRhEjIKB2FkZHJlc3MYASABKAlCGNK0",
            "LRRjb3Ntb3MuQWRkcmVzc1N0cmluZ1IHYWRkcmVzcxI+CghzaWduX2RvYxgC",
            "IAEoCzIjLmNvc21vcy50eC52MWJldGExLlNpZ25Eb2NEaXJlY3RBdXhSB3Np",
            "Z25Eb2MSNwoEbW9kZRgDIAEoDjIjLmNvc21vcy50eC5zaWduaW5nLnYxYmV0",
            "YTEuU2lnbk1vZGVSBG1vZGUSEAoDc2lnGAQgASgMUgNzaWdCrQEKFWNvbS5j",
            "b3Ntb3MudHgudjFiZXRhMUIHVHhQcm90b1ABWiVnaXRodWIuY29tL2Nvc21v",
            "cy9jb3Ntb3Mtc2RrL3R5cGVzL3R4ogIDQ1RYqgIRQ29zbW9zLlR4LlYxYmV0",
            "YTHKAhFDb3Ntb3NcVHhcVjFiZXRhMeICHUNvc21vc1xUeFxWMWJldGExXEdQ",
            "Qk1ldGFkYXRh6gITQ29zbW9zOjpUeDo6VjFiZXRhMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Amino.AminoReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, global::Cosmos.Crypto.Multisig.V1beta1.MultisigReflection.Descriptor, global::Cosmos.Base.V1beta1.CoinReflection.Descriptor, global::Cosmos.Tx.Signing.V1beta1.SigningReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::CosmosProto.CosmosReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.V1beta1.Tx), global::Cosmos.Tx.V1beta1.Tx.Parser, new[]{ "Body", "AuthInfo", "Signatures" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.V1beta1.TxRaw), global::Cosmos.Tx.V1beta1.TxRaw.Parser, new[]{ "BodyBytes", "AuthInfoBytes", "Signatures" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.V1beta1.SignDoc), global::Cosmos.Tx.V1beta1.SignDoc.Parser, new[]{ "BodyBytes", "AuthInfoBytes", "ChainId", "AccountNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.V1beta1.SignDocDirectAux), global::Cosmos.Tx.V1beta1.SignDocDirectAux.Parser, new[]{ "BodyBytes", "PublicKey", "ChainId", "AccountNumber", "Sequence", "Tip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.V1beta1.TxBody), global::Cosmos.Tx.V1beta1.TxBody.Parser, new[]{ "Messages", "Memo", "TimeoutHeight", "ExtensionOptions", "NonCriticalExtensionOptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.V1beta1.AuthInfo), global::Cosmos.Tx.V1beta1.AuthInfo.Parser, new[]{ "SignerInfos", "Fee", "Tip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.V1beta1.SignerInfo), global::Cosmos.Tx.V1beta1.SignerInfo.Parser, new[]{ "PublicKey", "ModeInfo", "Sequence" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.V1beta1.ModeInfo), global::Cosmos.Tx.V1beta1.ModeInfo.Parser, new[]{ "Single", "Multi" }, new[]{ "Sum" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.V1beta1.ModeInfo.Types.Single), global::Cosmos.Tx.V1beta1.ModeInfo.Types.Single.Parser, new[]{ "Mode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.V1beta1.ModeInfo.Types.Multi), global::Cosmos.Tx.V1beta1.ModeInfo.Types.Multi.Parser, new[]{ "Bitarray", "ModeInfos" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.V1beta1.Fee), global::Cosmos.Tx.V1beta1.Fee.Parser, new[]{ "Amount", "GasLimit", "Payer", "Granter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.V1beta1.Tip), global::Cosmos.Tx.V1beta1.Tip.Parser, new[]{ "Amount", "Tipper" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cosmos.Tx.V1beta1.AuxSignerData), global::Cosmos.Tx.V1beta1.AuxSignerData.Parser, new[]{ "Address", "SignDoc", "Mode", "Sig" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Tx is the standard type used for broadcasting transactions.
  /// </summary>
  public sealed partial class Tx : pb::IMessage<Tx>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Tx> _parser = new pb::MessageParser<Tx>(() => new Tx());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Tx> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Tx.V1beta1.TxReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tx() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tx(Tx other) : this() {
      body_ = other.body_ != null ? other.body_.Clone() : null;
      authInfo_ = other.authInfo_ != null ? other.authInfo_.Clone() : null;
      signatures_ = other.signatures_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tx Clone() {
      return new Tx(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private global::Cosmos.Tx.V1beta1.TxBody body_;
    /// <summary>
    /// body is the processable content of the transaction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Tx.V1beta1.TxBody Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "auth_info" field.</summary>
    public const int AuthInfoFieldNumber = 2;
    private global::Cosmos.Tx.V1beta1.AuthInfo authInfo_;
    /// <summary>
    /// auth_info is the authorization related content of the transaction,
    /// specifically signers, signer modes and fee
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Tx.V1beta1.AuthInfo AuthInfo {
      get { return authInfo_; }
      set {
        authInfo_ = value;
      }
    }

    /// <summary>Field number for the "signatures" field.</summary>
    public const int SignaturesFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_signatures_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> signatures_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// signatures is a list of signatures that matches the length and order of
    /// AuthInfo's signer_infos to allow connecting signature meta information like
    /// public key and signing mode by position.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> Signatures {
      get { return signatures_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Tx);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Tx other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Body, other.Body)) return false;
      if (!object.Equals(AuthInfo, other.AuthInfo)) return false;
      if(!signatures_.Equals(other.signatures_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (body_ != null) hash ^= Body.GetHashCode();
      if (authInfo_ != null) hash ^= AuthInfo.GetHashCode();
      hash ^= signatures_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (body_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Body);
      }
      if (authInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AuthInfo);
      }
      signatures_.WriteTo(output, _repeated_signatures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (body_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Body);
      }
      if (authInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AuthInfo);
      }
      signatures_.WriteTo(ref output, _repeated_signatures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (authInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthInfo);
      }
      size += signatures_.CalculateSize(_repeated_signatures_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Tx other) {
      if (other == null) {
        return;
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::Cosmos.Tx.V1beta1.TxBody();
        }
        Body.MergeFrom(other.Body);
      }
      if (other.authInfo_ != null) {
        if (authInfo_ == null) {
          AuthInfo = new global::Cosmos.Tx.V1beta1.AuthInfo();
        }
        AuthInfo.MergeFrom(other.AuthInfo);
      }
      signatures_.Add(other.signatures_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (body_ == null) {
              Body = new global::Cosmos.Tx.V1beta1.TxBody();
            }
            input.ReadMessage(Body);
            break;
          }
          case 18: {
            if (authInfo_ == null) {
              AuthInfo = new global::Cosmos.Tx.V1beta1.AuthInfo();
            }
            input.ReadMessage(AuthInfo);
            break;
          }
          case 26: {
            signatures_.AddEntriesFrom(input, _repeated_signatures_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (body_ == null) {
              Body = new global::Cosmos.Tx.V1beta1.TxBody();
            }
            input.ReadMessage(Body);
            break;
          }
          case 18: {
            if (authInfo_ == null) {
              AuthInfo = new global::Cosmos.Tx.V1beta1.AuthInfo();
            }
            input.ReadMessage(AuthInfo);
            break;
          }
          case 26: {
            signatures_.AddEntriesFrom(ref input, _repeated_signatures_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TxRaw is a variant of Tx that pins the signer's exact binary representation
  /// of body and auth_info. This is used for signing, broadcasting and
  /// verification. The binary `serialize(tx: TxRaw)` is stored in Tendermint and
  /// the hash `sha256(serialize(tx: TxRaw))` becomes the "txhash", commonly used
  /// as the transaction ID.
  /// </summary>
  public sealed partial class TxRaw : pb::IMessage<TxRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TxRaw> _parser = new pb::MessageParser<TxRaw>(() => new TxRaw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TxRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Tx.V1beta1.TxReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TxRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TxRaw(TxRaw other) : this() {
      bodyBytes_ = other.bodyBytes_;
      authInfoBytes_ = other.authInfoBytes_;
      signatures_ = other.signatures_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TxRaw Clone() {
      return new TxRaw(this);
    }

    /// <summary>Field number for the "body_bytes" field.</summary>
    public const int BodyBytesFieldNumber = 1;
    private pb::ByteString bodyBytes_ = pb::ByteString.Empty;
    /// <summary>
    /// body_bytes is a protobuf serialization of a TxBody that matches the
    /// representation in SignDoc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString BodyBytes {
      get { return bodyBytes_; }
      set {
        bodyBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "auth_info_bytes" field.</summary>
    public const int AuthInfoBytesFieldNumber = 2;
    private pb::ByteString authInfoBytes_ = pb::ByteString.Empty;
    /// <summary>
    /// auth_info_bytes is a protobuf serialization of an AuthInfo that matches the
    /// representation in SignDoc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AuthInfoBytes {
      get { return authInfoBytes_; }
      set {
        authInfoBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signatures" field.</summary>
    public const int SignaturesFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_signatures_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> signatures_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// signatures is a list of signatures that matches the length and order of
    /// AuthInfo's signer_infos to allow connecting signature meta information like
    /// public key and signing mode by position.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> Signatures {
      get { return signatures_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TxRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TxRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BodyBytes != other.BodyBytes) return false;
      if (AuthInfoBytes != other.AuthInfoBytes) return false;
      if(!signatures_.Equals(other.signatures_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BodyBytes.Length != 0) hash ^= BodyBytes.GetHashCode();
      if (AuthInfoBytes.Length != 0) hash ^= AuthInfoBytes.GetHashCode();
      hash ^= signatures_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BodyBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(BodyBytes);
      }
      if (AuthInfoBytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(AuthInfoBytes);
      }
      signatures_.WriteTo(output, _repeated_signatures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BodyBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(BodyBytes);
      }
      if (AuthInfoBytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(AuthInfoBytes);
      }
      signatures_.WriteTo(ref output, _repeated_signatures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BodyBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BodyBytes);
      }
      if (AuthInfoBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AuthInfoBytes);
      }
      size += signatures_.CalculateSize(_repeated_signatures_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TxRaw other) {
      if (other == null) {
        return;
      }
      if (other.BodyBytes.Length != 0) {
        BodyBytes = other.BodyBytes;
      }
      if (other.AuthInfoBytes.Length != 0) {
        AuthInfoBytes = other.AuthInfoBytes;
      }
      signatures_.Add(other.signatures_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BodyBytes = input.ReadBytes();
            break;
          }
          case 18: {
            AuthInfoBytes = input.ReadBytes();
            break;
          }
          case 26: {
            signatures_.AddEntriesFrom(input, _repeated_signatures_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BodyBytes = input.ReadBytes();
            break;
          }
          case 18: {
            AuthInfoBytes = input.ReadBytes();
            break;
          }
          case 26: {
            signatures_.AddEntriesFrom(ref input, _repeated_signatures_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// SignDoc is the type used for generating sign bytes for SIGN_MODE_DIRECT.
  /// </summary>
  public sealed partial class SignDoc : pb::IMessage<SignDoc>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SignDoc> _parser = new pb::MessageParser<SignDoc>(() => new SignDoc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SignDoc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Tx.V1beta1.TxReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignDoc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignDoc(SignDoc other) : this() {
      bodyBytes_ = other.bodyBytes_;
      authInfoBytes_ = other.authInfoBytes_;
      chainId_ = other.chainId_;
      accountNumber_ = other.accountNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignDoc Clone() {
      return new SignDoc(this);
    }

    /// <summary>Field number for the "body_bytes" field.</summary>
    public const int BodyBytesFieldNumber = 1;
    private pb::ByteString bodyBytes_ = pb::ByteString.Empty;
    /// <summary>
    /// body_bytes is protobuf serialization of a TxBody that matches the
    /// representation in TxRaw.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString BodyBytes {
      get { return bodyBytes_; }
      set {
        bodyBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "auth_info_bytes" field.</summary>
    public const int AuthInfoBytesFieldNumber = 2;
    private pb::ByteString authInfoBytes_ = pb::ByteString.Empty;
    /// <summary>
    /// auth_info_bytes is a protobuf serialization of an AuthInfo that matches the
    /// representation in TxRaw.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AuthInfoBytes {
      get { return authInfoBytes_; }
      set {
        authInfoBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 3;
    private string chainId_ = "";
    /// <summary>
    /// chain_id is the unique identifier of the chain this transaction targets.
    /// It prevents signed transactions from being used on another chain by an
    /// attacker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChainId {
      get { return chainId_; }
      set {
        chainId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_number" field.</summary>
    public const int AccountNumberFieldNumber = 4;
    private ulong accountNumber_;
    /// <summary>
    /// account_number is the account number of the account in state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AccountNumber {
      get { return accountNumber_; }
      set {
        accountNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SignDoc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SignDoc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BodyBytes != other.BodyBytes) return false;
      if (AuthInfoBytes != other.AuthInfoBytes) return false;
      if (ChainId != other.ChainId) return false;
      if (AccountNumber != other.AccountNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BodyBytes.Length != 0) hash ^= BodyBytes.GetHashCode();
      if (AuthInfoBytes.Length != 0) hash ^= AuthInfoBytes.GetHashCode();
      if (ChainId.Length != 0) hash ^= ChainId.GetHashCode();
      if (AccountNumber != 0UL) hash ^= AccountNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BodyBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(BodyBytes);
      }
      if (AuthInfoBytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(AuthInfoBytes);
      }
      if (ChainId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChainId);
      }
      if (AccountNumber != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AccountNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BodyBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(BodyBytes);
      }
      if (AuthInfoBytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(AuthInfoBytes);
      }
      if (ChainId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChainId);
      }
      if (AccountNumber != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AccountNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BodyBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BodyBytes);
      }
      if (AuthInfoBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AuthInfoBytes);
      }
      if (ChainId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChainId);
      }
      if (AccountNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AccountNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SignDoc other) {
      if (other == null) {
        return;
      }
      if (other.BodyBytes.Length != 0) {
        BodyBytes = other.BodyBytes;
      }
      if (other.AuthInfoBytes.Length != 0) {
        AuthInfoBytes = other.AuthInfoBytes;
      }
      if (other.ChainId.Length != 0) {
        ChainId = other.ChainId;
      }
      if (other.AccountNumber != 0UL) {
        AccountNumber = other.AccountNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BodyBytes = input.ReadBytes();
            break;
          }
          case 18: {
            AuthInfoBytes = input.ReadBytes();
            break;
          }
          case 26: {
            ChainId = input.ReadString();
            break;
          }
          case 32: {
            AccountNumber = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BodyBytes = input.ReadBytes();
            break;
          }
          case 18: {
            AuthInfoBytes = input.ReadBytes();
            break;
          }
          case 26: {
            ChainId = input.ReadString();
            break;
          }
          case 32: {
            AccountNumber = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// SignDocDirectAux is the type used for generating sign bytes for
  /// SIGN_MODE_DIRECT_AUX.
  ///
  /// Since: cosmos-sdk 0.46
  /// </summary>
  public sealed partial class SignDocDirectAux : pb::IMessage<SignDocDirectAux>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SignDocDirectAux> _parser = new pb::MessageParser<SignDocDirectAux>(() => new SignDocDirectAux());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SignDocDirectAux> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Tx.V1beta1.TxReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignDocDirectAux() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignDocDirectAux(SignDocDirectAux other) : this() {
      bodyBytes_ = other.bodyBytes_;
      publicKey_ = other.publicKey_ != null ? other.publicKey_.Clone() : null;
      chainId_ = other.chainId_;
      accountNumber_ = other.accountNumber_;
      sequence_ = other.sequence_;
      tip_ = other.tip_ != null ? other.tip_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignDocDirectAux Clone() {
      return new SignDocDirectAux(this);
    }

    /// <summary>Field number for the "body_bytes" field.</summary>
    public const int BodyBytesFieldNumber = 1;
    private pb::ByteString bodyBytes_ = pb::ByteString.Empty;
    /// <summary>
    /// body_bytes is protobuf serialization of a TxBody that matches the
    /// representation in TxRaw.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString BodyBytes {
      get { return bodyBytes_; }
      set {
        bodyBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Any publicKey_;
    /// <summary>
    /// public_key is the public key of the signing account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Any PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = value;
      }
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 3;
    private string chainId_ = "";
    /// <summary>
    /// chain_id is the identifier of the chain this transaction targets.
    /// It prevents signed transactions from being used on another chain by an
    /// attacker.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChainId {
      get { return chainId_; }
      set {
        chainId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_number" field.</summary>
    public const int AccountNumberFieldNumber = 4;
    private ulong accountNumber_;
    /// <summary>
    /// account_number is the account number of the account in state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AccountNumber {
      get { return accountNumber_; }
      set {
        accountNumber_ = value;
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 5;
    private ulong sequence_;
    /// <summary>
    /// sequence is the sequence number of the signing account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "tip" field.</summary>
    public const int TipFieldNumber = 6;
    private global::Cosmos.Tx.V1beta1.Tip tip_;
    /// <summary>
    /// Tip is the optional tip used for transactions fees paid in another denom.
    /// It should be left empty if the signer is not the tipper for this
    /// transaction.
    ///
    /// This field is ignored if the chain didn't enable tips, i.e. didn't add the
    /// `TipDecorator` in its posthandler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Tx.V1beta1.Tip Tip {
      get { return tip_; }
      set {
        tip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SignDocDirectAux);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SignDocDirectAux other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BodyBytes != other.BodyBytes) return false;
      if (!object.Equals(PublicKey, other.PublicKey)) return false;
      if (ChainId != other.ChainId) return false;
      if (AccountNumber != other.AccountNumber) return false;
      if (Sequence != other.Sequence) return false;
      if (!object.Equals(Tip, other.Tip)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BodyBytes.Length != 0) hash ^= BodyBytes.GetHashCode();
      if (publicKey_ != null) hash ^= PublicKey.GetHashCode();
      if (ChainId.Length != 0) hash ^= ChainId.GetHashCode();
      if (AccountNumber != 0UL) hash ^= AccountNumber.GetHashCode();
      if (Sequence != 0UL) hash ^= Sequence.GetHashCode();
      if (tip_ != null) hash ^= Tip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BodyBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(BodyBytes);
      }
      if (publicKey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PublicKey);
      }
      if (ChainId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChainId);
      }
      if (AccountNumber != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AccountNumber);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Sequence);
      }
      if (tip_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Tip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BodyBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(BodyBytes);
      }
      if (publicKey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PublicKey);
      }
      if (ChainId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChainId);
      }
      if (AccountNumber != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AccountNumber);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Sequence);
      }
      if (tip_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Tip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BodyBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BodyBytes);
      }
      if (publicKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicKey);
      }
      if (ChainId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChainId);
      }
      if (AccountNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AccountNumber);
      }
      if (Sequence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sequence);
      }
      if (tip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SignDocDirectAux other) {
      if (other == null) {
        return;
      }
      if (other.BodyBytes.Length != 0) {
        BodyBytes = other.BodyBytes;
      }
      if (other.publicKey_ != null) {
        if (publicKey_ == null) {
          PublicKey = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        PublicKey.MergeFrom(other.PublicKey);
      }
      if (other.ChainId.Length != 0) {
        ChainId = other.ChainId;
      }
      if (other.AccountNumber != 0UL) {
        AccountNumber = other.AccountNumber;
      }
      if (other.Sequence != 0UL) {
        Sequence = other.Sequence;
      }
      if (other.tip_ != null) {
        if (tip_ == null) {
          Tip = new global::Cosmos.Tx.V1beta1.Tip();
        }
        Tip.MergeFrom(other.Tip);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BodyBytes = input.ReadBytes();
            break;
          }
          case 18: {
            if (publicKey_ == null) {
              PublicKey = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(PublicKey);
            break;
          }
          case 26: {
            ChainId = input.ReadString();
            break;
          }
          case 32: {
            AccountNumber = input.ReadUInt64();
            break;
          }
          case 40: {
            Sequence = input.ReadUInt64();
            break;
          }
          case 50: {
            if (tip_ == null) {
              Tip = new global::Cosmos.Tx.V1beta1.Tip();
            }
            input.ReadMessage(Tip);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BodyBytes = input.ReadBytes();
            break;
          }
          case 18: {
            if (publicKey_ == null) {
              PublicKey = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(PublicKey);
            break;
          }
          case 26: {
            ChainId = input.ReadString();
            break;
          }
          case 32: {
            AccountNumber = input.ReadUInt64();
            break;
          }
          case 40: {
            Sequence = input.ReadUInt64();
            break;
          }
          case 50: {
            if (tip_ == null) {
              Tip = new global::Cosmos.Tx.V1beta1.Tip();
            }
            input.ReadMessage(Tip);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TxBody is the body of a transaction that all signers sign over.
  /// </summary>
  public sealed partial class TxBody : pb::IMessage<TxBody>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TxBody> _parser = new pb::MessageParser<TxBody>(() => new TxBody());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TxBody> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Tx.V1beta1.TxReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TxBody() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TxBody(TxBody other) : this() {
      messages_ = other.messages_.Clone();
      memo_ = other.memo_;
      timeoutHeight_ = other.timeoutHeight_;
      extensionOptions_ = other.extensionOptions_.Clone();
      nonCriticalExtensionOptions_ = other.nonCriticalExtensionOptions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TxBody Clone() {
      return new TxBody(this);
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> messages_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    /// <summary>
    /// messages is a list of messages to be executed. The required signers of
    /// those messages define the number and order of elements in AuthInfo's
    /// signer_infos and Tx's signatures. Each required signer address is added to
    /// the list only the first time it occurs.
    /// By convention, the first required signer (usually from the first message)
    /// is referred to as the primary signer and pays the fee for the whole
    /// transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Messages {
      get { return messages_; }
    }

    /// <summary>Field number for the "memo" field.</summary>
    public const int MemoFieldNumber = 2;
    private string memo_ = "";
    /// <summary>
    /// memo is any arbitrary note/comment to be added to the transaction.
    /// WARNING: in clients, any publicly exposed text should not be called memo,
    /// but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Memo {
      get { return memo_; }
      set {
        memo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timeout_height" field.</summary>
    public const int TimeoutHeightFieldNumber = 3;
    private ulong timeoutHeight_;
    /// <summary>
    /// timeout is the block height after which this transaction will not
    /// be processed by the chain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TimeoutHeight {
      get { return timeoutHeight_; }
      set {
        timeoutHeight_ = value;
      }
    }

    /// <summary>Field number for the "extension_options" field.</summary>
    public const int ExtensionOptionsFieldNumber = 1023;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_extensionOptions_codec
        = pb::FieldCodec.ForMessage(8186, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> extensionOptions_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    /// <summary>
    /// extension_options are arbitrary options that can be added by chains
    /// when the default options are not sufficient. If any of these are present
    /// and can't be handled, the transaction will be rejected
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> ExtensionOptions {
      get { return extensionOptions_; }
    }

    /// <summary>Field number for the "non_critical_extension_options" field.</summary>
    public const int NonCriticalExtensionOptionsFieldNumber = 2047;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_nonCriticalExtensionOptions_codec
        = pb::FieldCodec.ForMessage(16378, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> nonCriticalExtensionOptions_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    /// <summary>
    /// extension_options are arbitrary options that can be added by chains
    /// when the default options are not sufficient. If any of these are present
    /// and can't be handled, they will be ignored
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> NonCriticalExtensionOptions {
      get { return nonCriticalExtensionOptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TxBody);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TxBody other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!messages_.Equals(other.messages_)) return false;
      if (Memo != other.Memo) return false;
      if (TimeoutHeight != other.TimeoutHeight) return false;
      if(!extensionOptions_.Equals(other.extensionOptions_)) return false;
      if(!nonCriticalExtensionOptions_.Equals(other.nonCriticalExtensionOptions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= messages_.GetHashCode();
      if (Memo.Length != 0) hash ^= Memo.GetHashCode();
      if (TimeoutHeight != 0UL) hash ^= TimeoutHeight.GetHashCode();
      hash ^= extensionOptions_.GetHashCode();
      hash ^= nonCriticalExtensionOptions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      messages_.WriteTo(output, _repeated_messages_codec);
      if (Memo.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Memo);
      }
      if (TimeoutHeight != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TimeoutHeight);
      }
      extensionOptions_.WriteTo(output, _repeated_extensionOptions_codec);
      nonCriticalExtensionOptions_.WriteTo(output, _repeated_nonCriticalExtensionOptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      messages_.WriteTo(ref output, _repeated_messages_codec);
      if (Memo.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Memo);
      }
      if (TimeoutHeight != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TimeoutHeight);
      }
      extensionOptions_.WriteTo(ref output, _repeated_extensionOptions_codec);
      nonCriticalExtensionOptions_.WriteTo(ref output, _repeated_nonCriticalExtensionOptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (Memo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Memo);
      }
      if (TimeoutHeight != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeoutHeight);
      }
      size += extensionOptions_.CalculateSize(_repeated_extensionOptions_codec);
      size += nonCriticalExtensionOptions_.CalculateSize(_repeated_nonCriticalExtensionOptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TxBody other) {
      if (other == null) {
        return;
      }
      messages_.Add(other.messages_);
      if (other.Memo.Length != 0) {
        Memo = other.Memo;
      }
      if (other.TimeoutHeight != 0UL) {
        TimeoutHeight = other.TimeoutHeight;
      }
      extensionOptions_.Add(other.extensionOptions_);
      nonCriticalExtensionOptions_.Add(other.nonCriticalExtensionOptions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
          case 18: {
            Memo = input.ReadString();
            break;
          }
          case 24: {
            TimeoutHeight = input.ReadUInt64();
            break;
          }
          case 8186: {
            extensionOptions_.AddEntriesFrom(input, _repeated_extensionOptions_codec);
            break;
          }
          case 16378: {
            nonCriticalExtensionOptions_.AddEntriesFrom(input, _repeated_nonCriticalExtensionOptions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            messages_.AddEntriesFrom(ref input, _repeated_messages_codec);
            break;
          }
          case 18: {
            Memo = input.ReadString();
            break;
          }
          case 24: {
            TimeoutHeight = input.ReadUInt64();
            break;
          }
          case 8186: {
            extensionOptions_.AddEntriesFrom(ref input, _repeated_extensionOptions_codec);
            break;
          }
          case 16378: {
            nonCriticalExtensionOptions_.AddEntriesFrom(ref input, _repeated_nonCriticalExtensionOptions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// AuthInfo describes the fee and signer modes that are used to sign a
  /// transaction.
  /// </summary>
  public sealed partial class AuthInfo : pb::IMessage<AuthInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthInfo> _parser = new pb::MessageParser<AuthInfo>(() => new AuthInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuthInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Tx.V1beta1.TxReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthInfo(AuthInfo other) : this() {
      signerInfos_ = other.signerInfos_.Clone();
      fee_ = other.fee_ != null ? other.fee_.Clone() : null;
      tip_ = other.tip_ != null ? other.tip_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthInfo Clone() {
      return new AuthInfo(this);
    }

    /// <summary>Field number for the "signer_infos" field.</summary>
    public const int SignerInfosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Cosmos.Tx.V1beta1.SignerInfo> _repeated_signerInfos_codec
        = pb::FieldCodec.ForMessage(10, global::Cosmos.Tx.V1beta1.SignerInfo.Parser);
    private readonly pbc::RepeatedField<global::Cosmos.Tx.V1beta1.SignerInfo> signerInfos_ = new pbc::RepeatedField<global::Cosmos.Tx.V1beta1.SignerInfo>();
    /// <summary>
    /// signer_infos defines the signing modes for the required signers. The number
    /// and order of elements must match the required signers from TxBody's
    /// messages. The first element is the primary signer and the one which pays
    /// the fee.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cosmos.Tx.V1beta1.SignerInfo> SignerInfos {
      get { return signerInfos_; }
    }

    /// <summary>Field number for the "fee" field.</summary>
    public const int FeeFieldNumber = 2;
    private global::Cosmos.Tx.V1beta1.Fee fee_;
    /// <summary>
    /// Fee is the fee and gas limit for the transaction. The first signer is the
    /// primary signer and the one which pays the fee. The fee can be calculated
    /// based on the cost of evaluating the body and doing signature verification
    /// of the signers. This can be estimated via simulation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Tx.V1beta1.Fee Fee {
      get { return fee_; }
      set {
        fee_ = value;
      }
    }

    /// <summary>Field number for the "tip" field.</summary>
    public const int TipFieldNumber = 3;
    private global::Cosmos.Tx.V1beta1.Tip tip_;
    /// <summary>
    /// Tip is the optional tip used for transactions fees paid in another denom.
    ///
    /// This field is ignored if the chain didn't enable tips, i.e. didn't add the
    /// `TipDecorator` in its posthandler.
    ///
    /// Since: cosmos-sdk 0.46
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Tx.V1beta1.Tip Tip {
      get { return tip_; }
      set {
        tip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuthInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuthInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!signerInfos_.Equals(other.signerInfos_)) return false;
      if (!object.Equals(Fee, other.Fee)) return false;
      if (!object.Equals(Tip, other.Tip)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= signerInfos_.GetHashCode();
      if (fee_ != null) hash ^= Fee.GetHashCode();
      if (tip_ != null) hash ^= Tip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      signerInfos_.WriteTo(output, _repeated_signerInfos_codec);
      if (fee_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Fee);
      }
      if (tip_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Tip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      signerInfos_.WriteTo(ref output, _repeated_signerInfos_codec);
      if (fee_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Fee);
      }
      if (tip_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Tip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += signerInfos_.CalculateSize(_repeated_signerInfos_codec);
      if (fee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fee);
      }
      if (tip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuthInfo other) {
      if (other == null) {
        return;
      }
      signerInfos_.Add(other.signerInfos_);
      if (other.fee_ != null) {
        if (fee_ == null) {
          Fee = new global::Cosmos.Tx.V1beta1.Fee();
        }
        Fee.MergeFrom(other.Fee);
      }
      if (other.tip_ != null) {
        if (tip_ == null) {
          Tip = new global::Cosmos.Tx.V1beta1.Tip();
        }
        Tip.MergeFrom(other.Tip);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            signerInfos_.AddEntriesFrom(input, _repeated_signerInfos_codec);
            break;
          }
          case 18: {
            if (fee_ == null) {
              Fee = new global::Cosmos.Tx.V1beta1.Fee();
            }
            input.ReadMessage(Fee);
            break;
          }
          case 26: {
            if (tip_ == null) {
              Tip = new global::Cosmos.Tx.V1beta1.Tip();
            }
            input.ReadMessage(Tip);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            signerInfos_.AddEntriesFrom(ref input, _repeated_signerInfos_codec);
            break;
          }
          case 18: {
            if (fee_ == null) {
              Fee = new global::Cosmos.Tx.V1beta1.Fee();
            }
            input.ReadMessage(Fee);
            break;
          }
          case 26: {
            if (tip_ == null) {
              Tip = new global::Cosmos.Tx.V1beta1.Tip();
            }
            input.ReadMessage(Tip);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// SignerInfo describes the public key and signing mode of a single top-level
  /// signer.
  /// </summary>
  public sealed partial class SignerInfo : pb::IMessage<SignerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SignerInfo> _parser = new pb::MessageParser<SignerInfo>(() => new SignerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SignerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Tx.V1beta1.TxReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignerInfo(SignerInfo other) : this() {
      publicKey_ = other.publicKey_ != null ? other.publicKey_.Clone() : null;
      modeInfo_ = other.modeInfo_ != null ? other.modeInfo_.Clone() : null;
      sequence_ = other.sequence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignerInfo Clone() {
      return new SignerInfo(this);
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Any publicKey_;
    /// <summary>
    /// public_key is the public key of the signer. It is optional for accounts
    /// that already exist in state. If unset, the verifier can use the required \
    /// signer address for this position and lookup the public key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Any PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = value;
      }
    }

    /// <summary>Field number for the "mode_info" field.</summary>
    public const int ModeInfoFieldNumber = 2;
    private global::Cosmos.Tx.V1beta1.ModeInfo modeInfo_;
    /// <summary>
    /// mode_info describes the signing mode of the signer and is a nested
    /// structure to support nested multisig pubkey's
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Tx.V1beta1.ModeInfo ModeInfo {
      get { return modeInfo_; }
      set {
        modeInfo_ = value;
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 3;
    private ulong sequence_;
    /// <summary>
    /// sequence is the sequence of the account, which describes the
    /// number of committed transactions signed by a given address. It is used to
    /// prevent replay attacks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SignerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SignerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PublicKey, other.PublicKey)) return false;
      if (!object.Equals(ModeInfo, other.ModeInfo)) return false;
      if (Sequence != other.Sequence) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (publicKey_ != null) hash ^= PublicKey.GetHashCode();
      if (modeInfo_ != null) hash ^= ModeInfo.GetHashCode();
      if (Sequence != 0UL) hash ^= Sequence.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (publicKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PublicKey);
      }
      if (modeInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ModeInfo);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Sequence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (publicKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PublicKey);
      }
      if (modeInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ModeInfo);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Sequence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (publicKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicKey);
      }
      if (modeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModeInfo);
      }
      if (Sequence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sequence);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SignerInfo other) {
      if (other == null) {
        return;
      }
      if (other.publicKey_ != null) {
        if (publicKey_ == null) {
          PublicKey = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        PublicKey.MergeFrom(other.PublicKey);
      }
      if (other.modeInfo_ != null) {
        if (modeInfo_ == null) {
          ModeInfo = new global::Cosmos.Tx.V1beta1.ModeInfo();
        }
        ModeInfo.MergeFrom(other.ModeInfo);
      }
      if (other.Sequence != 0UL) {
        Sequence = other.Sequence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (publicKey_ == null) {
              PublicKey = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(PublicKey);
            break;
          }
          case 18: {
            if (modeInfo_ == null) {
              ModeInfo = new global::Cosmos.Tx.V1beta1.ModeInfo();
            }
            input.ReadMessage(ModeInfo);
            break;
          }
          case 24: {
            Sequence = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (publicKey_ == null) {
              PublicKey = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(PublicKey);
            break;
          }
          case 18: {
            if (modeInfo_ == null) {
              ModeInfo = new global::Cosmos.Tx.V1beta1.ModeInfo();
            }
            input.ReadMessage(ModeInfo);
            break;
          }
          case 24: {
            Sequence = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ModeInfo describes the signing mode of a single or nested multisig signer.
  /// </summary>
  public sealed partial class ModeInfo : pb::IMessage<ModeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModeInfo> _parser = new pb::MessageParser<ModeInfo>(() => new ModeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ModeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Tx.V1beta1.TxReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModeInfo(ModeInfo other) : this() {
      switch (other.SumCase) {
        case SumOneofCase.Single:
          Single = other.Single.Clone();
          break;
        case SumOneofCase.Multi:
          Multi = other.Multi.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModeInfo Clone() {
      return new ModeInfo(this);
    }

    /// <summary>Field number for the "single" field.</summary>
    public const int SingleFieldNumber = 1;
    /// <summary>
    /// single represents a single signer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Tx.V1beta1.ModeInfo.Types.Single Single {
      get { return sumCase_ == SumOneofCase.Single ? (global::Cosmos.Tx.V1beta1.ModeInfo.Types.Single) sum_ : null; }
      set {
        sum_ = value;
        sumCase_ = value == null ? SumOneofCase.None : SumOneofCase.Single;
      }
    }

    /// <summary>Field number for the "multi" field.</summary>
    public const int MultiFieldNumber = 2;
    /// <summary>
    /// multi represents a nested multisig signer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Tx.V1beta1.ModeInfo.Types.Multi Multi {
      get { return sumCase_ == SumOneofCase.Multi ? (global::Cosmos.Tx.V1beta1.ModeInfo.Types.Multi) sum_ : null; }
      set {
        sum_ = value;
        sumCase_ = value == null ? SumOneofCase.None : SumOneofCase.Multi;
      }
    }

    private object sum_;
    /// <summary>Enum of possible cases for the "sum" oneof.</summary>
    public enum SumOneofCase {
      None = 0,
      Single = 1,
      Multi = 2,
    }
    private SumOneofCase sumCase_ = SumOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SumOneofCase SumCase {
      get { return sumCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSum() {
      sumCase_ = SumOneofCase.None;
      sum_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ModeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ModeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Single, other.Single)) return false;
      if (!object.Equals(Multi, other.Multi)) return false;
      if (SumCase != other.SumCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (sumCase_ == SumOneofCase.Single) hash ^= Single.GetHashCode();
      if (sumCase_ == SumOneofCase.Multi) hash ^= Multi.GetHashCode();
      hash ^= (int) sumCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sumCase_ == SumOneofCase.Single) {
        output.WriteRawTag(10);
        output.WriteMessage(Single);
      }
      if (sumCase_ == SumOneofCase.Multi) {
        output.WriteRawTag(18);
        output.WriteMessage(Multi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sumCase_ == SumOneofCase.Single) {
        output.WriteRawTag(10);
        output.WriteMessage(Single);
      }
      if (sumCase_ == SumOneofCase.Multi) {
        output.WriteRawTag(18);
        output.WriteMessage(Multi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (sumCase_ == SumOneofCase.Single) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Single);
      }
      if (sumCase_ == SumOneofCase.Multi) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Multi);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ModeInfo other) {
      if (other == null) {
        return;
      }
      switch (other.SumCase) {
        case SumOneofCase.Single:
          if (Single == null) {
            Single = new global::Cosmos.Tx.V1beta1.ModeInfo.Types.Single();
          }
          Single.MergeFrom(other.Single);
          break;
        case SumOneofCase.Multi:
          if (Multi == null) {
            Multi = new global::Cosmos.Tx.V1beta1.ModeInfo.Types.Multi();
          }
          Multi.MergeFrom(other.Multi);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Cosmos.Tx.V1beta1.ModeInfo.Types.Single subBuilder = new global::Cosmos.Tx.V1beta1.ModeInfo.Types.Single();
            if (sumCase_ == SumOneofCase.Single) {
              subBuilder.MergeFrom(Single);
            }
            input.ReadMessage(subBuilder);
            Single = subBuilder;
            break;
          }
          case 18: {
            global::Cosmos.Tx.V1beta1.ModeInfo.Types.Multi subBuilder = new global::Cosmos.Tx.V1beta1.ModeInfo.Types.Multi();
            if (sumCase_ == SumOneofCase.Multi) {
              subBuilder.MergeFrom(Multi);
            }
            input.ReadMessage(subBuilder);
            Multi = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Cosmos.Tx.V1beta1.ModeInfo.Types.Single subBuilder = new global::Cosmos.Tx.V1beta1.ModeInfo.Types.Single();
            if (sumCase_ == SumOneofCase.Single) {
              subBuilder.MergeFrom(Single);
            }
            input.ReadMessage(subBuilder);
            Single = subBuilder;
            break;
          }
          case 18: {
            global::Cosmos.Tx.V1beta1.ModeInfo.Types.Multi subBuilder = new global::Cosmos.Tx.V1beta1.ModeInfo.Types.Multi();
            if (sumCase_ == SumOneofCase.Multi) {
              subBuilder.MergeFrom(Multi);
            }
            input.ReadMessage(subBuilder);
            Multi = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ModeInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Single is the mode info for a single signer. It is structured as a message
      /// to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
      /// future
      /// </summary>
      public sealed partial class Single : pb::IMessage<Single>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Single> _parser = new pb::MessageParser<Single>(() => new Single());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Single> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Cosmos.Tx.V1beta1.ModeInfo.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Single() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Single(Single other) : this() {
          mode_ = other.mode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Single Clone() {
          return new Single(this);
        }

        /// <summary>Field number for the "mode" field.</summary>
        public const int ModeFieldNumber = 1;
        private global::Cosmos.Tx.Signing.V1beta1.SignMode mode_ = global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified;
        /// <summary>
        /// mode is the signing mode of the single signer
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Cosmos.Tx.Signing.V1beta1.SignMode Mode {
          get { return mode_; }
          set {
            mode_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Single);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Single other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Mode != other.Mode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) hash ^= Mode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Mode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Mode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Single other) {
          if (other == null) {
            return;
          }
          if (other.Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) {
            Mode = other.Mode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Mode = (global::Cosmos.Tx.Signing.V1beta1.SignMode) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Mode = (global::Cosmos.Tx.Signing.V1beta1.SignMode) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Multi is the mode info for a multisig public key
      /// </summary>
      public sealed partial class Multi : pb::IMessage<Multi>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Multi> _parser = new pb::MessageParser<Multi>(() => new Multi());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Multi> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Cosmos.Tx.V1beta1.ModeInfo.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Multi() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Multi(Multi other) : this() {
          bitarray_ = other.bitarray_ != null ? other.bitarray_.Clone() : null;
          modeInfos_ = other.modeInfos_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Multi Clone() {
          return new Multi(this);
        }

        /// <summary>Field number for the "bitarray" field.</summary>
        public const int BitarrayFieldNumber = 1;
        private global::Cosmos.Crypto.Multisig.V1beta1.CompactBitArray bitarray_;
        /// <summary>
        /// bitarray specifies which keys within the multisig are signing
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Cosmos.Crypto.Multisig.V1beta1.CompactBitArray Bitarray {
          get { return bitarray_; }
          set {
            bitarray_ = value;
          }
        }

        /// <summary>Field number for the "mode_infos" field.</summary>
        public const int ModeInfosFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Cosmos.Tx.V1beta1.ModeInfo> _repeated_modeInfos_codec
            = pb::FieldCodec.ForMessage(18, global::Cosmos.Tx.V1beta1.ModeInfo.Parser);
        private readonly pbc::RepeatedField<global::Cosmos.Tx.V1beta1.ModeInfo> modeInfos_ = new pbc::RepeatedField<global::Cosmos.Tx.V1beta1.ModeInfo>();
        /// <summary>
        /// mode_infos is the corresponding modes of the signers of the multisig
        /// which could include nested multisig public keys
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Cosmos.Tx.V1beta1.ModeInfo> ModeInfos {
          get { return modeInfos_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Multi);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Multi other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Bitarray, other.Bitarray)) return false;
          if(!modeInfos_.Equals(other.modeInfos_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (bitarray_ != null) hash ^= Bitarray.GetHashCode();
          hash ^= modeInfos_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (bitarray_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Bitarray);
          }
          modeInfos_.WriteTo(output, _repeated_modeInfos_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (bitarray_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Bitarray);
          }
          modeInfos_.WriteTo(ref output, _repeated_modeInfos_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (bitarray_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bitarray);
          }
          size += modeInfos_.CalculateSize(_repeated_modeInfos_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Multi other) {
          if (other == null) {
            return;
          }
          if (other.bitarray_ != null) {
            if (bitarray_ == null) {
              Bitarray = new global::Cosmos.Crypto.Multisig.V1beta1.CompactBitArray();
            }
            Bitarray.MergeFrom(other.Bitarray);
          }
          modeInfos_.Add(other.modeInfos_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (bitarray_ == null) {
                  Bitarray = new global::Cosmos.Crypto.Multisig.V1beta1.CompactBitArray();
                }
                input.ReadMessage(Bitarray);
                break;
              }
              case 18: {
                modeInfos_.AddEntriesFrom(input, _repeated_modeInfos_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (bitarray_ == null) {
                  Bitarray = new global::Cosmos.Crypto.Multisig.V1beta1.CompactBitArray();
                }
                input.ReadMessage(Bitarray);
                break;
              }
              case 18: {
                modeInfos_.AddEntriesFrom(ref input, _repeated_modeInfos_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Fee includes the amount of coins paid in fees and the maximum
  /// gas to be used by the transaction. The ratio yields an effective "gasprice",
  /// which must be above some miminum to be accepted into the mempool.
  /// </summary>
  public sealed partial class Fee : pb::IMessage<Fee>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Fee> _parser = new pb::MessageParser<Fee>(() => new Fee());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Fee> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Tx.V1beta1.TxReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Fee() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Fee(Fee other) : this() {
      amount_ = other.amount_.Clone();
      gasLimit_ = other.gasLimit_;
      payer_ = other.payer_;
      granter_ = other.granter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Fee Clone() {
      return new Fee(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Cosmos.Base.V1beta1.Coin> _repeated_amount_codec
        = pb::FieldCodec.ForMessage(10, global::Cosmos.Base.V1beta1.Coin.Parser);
    private readonly pbc::RepeatedField<global::Cosmos.Base.V1beta1.Coin> amount_ = new pbc::RepeatedField<global::Cosmos.Base.V1beta1.Coin>();
    /// <summary>
    /// amount is the amount of coins to be paid as a fee
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cosmos.Base.V1beta1.Coin> Amount {
      get { return amount_; }
    }

    /// <summary>Field number for the "gas_limit" field.</summary>
    public const int GasLimitFieldNumber = 2;
    private ulong gasLimit_;
    /// <summary>
    /// gas_limit is the maximum gas that can be used in transaction processing
    /// before an out of gas error occurs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GasLimit {
      get { return gasLimit_; }
      set {
        gasLimit_ = value;
      }
    }

    /// <summary>Field number for the "payer" field.</summary>
    public const int PayerFieldNumber = 3;
    private string payer_ = "";
    /// <summary>
    /// if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
    /// the payer must be a tx signer (and thus have signed this field in AuthInfo).
    /// setting this field does *not* change the ordering of required signers for the transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Payer {
      get { return payer_; }
      set {
        payer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "granter" field.</summary>
    public const int GranterFieldNumber = 4;
    private string granter_ = "";
    /// <summary>
    /// if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
    /// to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
    /// not support fee grants, this will fail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Granter {
      get { return granter_; }
      set {
        granter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Fee);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Fee other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!amount_.Equals(other.amount_)) return false;
      if (GasLimit != other.GasLimit) return false;
      if (Payer != other.Payer) return false;
      if (Granter != other.Granter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= amount_.GetHashCode();
      if (GasLimit != 0UL) hash ^= GasLimit.GetHashCode();
      if (Payer.Length != 0) hash ^= Payer.GetHashCode();
      if (Granter.Length != 0) hash ^= Granter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      amount_.WriteTo(output, _repeated_amount_codec);
      if (GasLimit != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(GasLimit);
      }
      if (Payer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Payer);
      }
      if (Granter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Granter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      amount_.WriteTo(ref output, _repeated_amount_codec);
      if (GasLimit != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(GasLimit);
      }
      if (Payer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Payer);
      }
      if (Granter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Granter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += amount_.CalculateSize(_repeated_amount_codec);
      if (GasLimit != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GasLimit);
      }
      if (Payer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Payer);
      }
      if (Granter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Granter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Fee other) {
      if (other == null) {
        return;
      }
      amount_.Add(other.amount_);
      if (other.GasLimit != 0UL) {
        GasLimit = other.GasLimit;
      }
      if (other.Payer.Length != 0) {
        Payer = other.Payer;
      }
      if (other.Granter.Length != 0) {
        Granter = other.Granter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            amount_.AddEntriesFrom(input, _repeated_amount_codec);
            break;
          }
          case 16: {
            GasLimit = input.ReadUInt64();
            break;
          }
          case 26: {
            Payer = input.ReadString();
            break;
          }
          case 34: {
            Granter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            amount_.AddEntriesFrom(ref input, _repeated_amount_codec);
            break;
          }
          case 16: {
            GasLimit = input.ReadUInt64();
            break;
          }
          case 26: {
            Payer = input.ReadString();
            break;
          }
          case 34: {
            Granter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Tip is the tip used for meta-transactions.
  ///
  /// Since: cosmos-sdk 0.46
  /// </summary>
  public sealed partial class Tip : pb::IMessage<Tip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Tip> _parser = new pb::MessageParser<Tip>(() => new Tip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Tip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Tx.V1beta1.TxReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tip(Tip other) : this() {
      amount_ = other.amount_.Clone();
      tipper_ = other.tipper_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tip Clone() {
      return new Tip(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Cosmos.Base.V1beta1.Coin> _repeated_amount_codec
        = pb::FieldCodec.ForMessage(10, global::Cosmos.Base.V1beta1.Coin.Parser);
    private readonly pbc::RepeatedField<global::Cosmos.Base.V1beta1.Coin> amount_ = new pbc::RepeatedField<global::Cosmos.Base.V1beta1.Coin>();
    /// <summary>
    /// amount is the amount of the tip
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cosmos.Base.V1beta1.Coin> Amount {
      get { return amount_; }
    }

    /// <summary>Field number for the "tipper" field.</summary>
    public const int TipperFieldNumber = 2;
    private string tipper_ = "";
    /// <summary>
    /// tipper is the address of the account paying for the tip
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tipper {
      get { return tipper_; }
      set {
        tipper_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Tip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Tip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!amount_.Equals(other.amount_)) return false;
      if (Tipper != other.Tipper) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= amount_.GetHashCode();
      if (Tipper.Length != 0) hash ^= Tipper.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      amount_.WriteTo(output, _repeated_amount_codec);
      if (Tipper.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Tipper);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      amount_.WriteTo(ref output, _repeated_amount_codec);
      if (Tipper.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Tipper);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += amount_.CalculateSize(_repeated_amount_codec);
      if (Tipper.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tipper);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Tip other) {
      if (other == null) {
        return;
      }
      amount_.Add(other.amount_);
      if (other.Tipper.Length != 0) {
        Tipper = other.Tipper;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            amount_.AddEntriesFrom(input, _repeated_amount_codec);
            break;
          }
          case 18: {
            Tipper = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            amount_.AddEntriesFrom(ref input, _repeated_amount_codec);
            break;
          }
          case 18: {
            Tipper = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// AuxSignerData is the intermediary format that an auxiliary signer (e.g. a
  /// tipper) builds and sends to the fee payer (who will build and broadcast the
  /// actual tx). AuxSignerData is not a valid tx in itself, and will be rejected
  /// by the node if sent directly as-is.
  ///
  /// Since: cosmos-sdk 0.46
  /// </summary>
  public sealed partial class AuxSignerData : pb::IMessage<AuxSignerData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuxSignerData> _parser = new pb::MessageParser<AuxSignerData>(() => new AuxSignerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuxSignerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cosmos.Tx.V1beta1.TxReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuxSignerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuxSignerData(AuxSignerData other) : this() {
      address_ = other.address_;
      signDoc_ = other.signDoc_ != null ? other.signDoc_.Clone() : null;
      mode_ = other.mode_;
      sig_ = other.sig_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuxSignerData Clone() {
      return new AuxSignerData(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    /// <summary>
    /// address is the bech32-encoded address of the auxiliary signer. If using
    /// AuxSignerData across different chains, the bech32 prefix of the target
    /// chain (where the final transaction is broadcasted) should be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sign_doc" field.</summary>
    public const int SignDocFieldNumber = 2;
    private global::Cosmos.Tx.V1beta1.SignDocDirectAux signDoc_;
    /// <summary>
    /// sign_doc is the SIGN_MODE_DIRECT_AUX sign doc that the auxiliary signer
    /// signs. Note: we use the same sign doc even if we're signing with
    /// LEGACY_AMINO_JSON.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Tx.V1beta1.SignDocDirectAux SignDoc {
      get { return signDoc_; }
      set {
        signDoc_ = value;
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 3;
    private global::Cosmos.Tx.Signing.V1beta1.SignMode mode_ = global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified;
    /// <summary>
    /// mode is the signing mode of the single signer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cosmos.Tx.Signing.V1beta1.SignMode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "sig" field.</summary>
    public const int SigFieldNumber = 4;
    private pb::ByteString sig_ = pb::ByteString.Empty;
    /// <summary>
    /// sig is the signature of the sign doc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Sig {
      get { return sig_; }
      set {
        sig_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuxSignerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuxSignerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (!object.Equals(SignDoc, other.SignDoc)) return false;
      if (Mode != other.Mode) return false;
      if (Sig != other.Sig) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (signDoc_ != null) hash ^= SignDoc.GetHashCode();
      if (Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) hash ^= Mode.GetHashCode();
      if (Sig.Length != 0) hash ^= Sig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (signDoc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SignDoc);
      }
      if (Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Mode);
      }
      if (Sig.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Sig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (signDoc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SignDoc);
      }
      if (Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Mode);
      }
      if (Sig.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Sig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (signDoc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SignDoc);
      }
      if (Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (Sig.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Sig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuxSignerData other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.signDoc_ != null) {
        if (signDoc_ == null) {
          SignDoc = new global::Cosmos.Tx.V1beta1.SignDocDirectAux();
        }
        SignDoc.MergeFrom(other.SignDoc);
      }
      if (other.Mode != global::Cosmos.Tx.Signing.V1beta1.SignMode.Unspecified) {
        Mode = other.Mode;
      }
      if (other.Sig.Length != 0) {
        Sig = other.Sig;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 18: {
            if (signDoc_ == null) {
              SignDoc = new global::Cosmos.Tx.V1beta1.SignDocDirectAux();
            }
            input.ReadMessage(SignDoc);
            break;
          }
          case 24: {
            Mode = (global::Cosmos.Tx.Signing.V1beta1.SignMode) input.ReadEnum();
            break;
          }
          case 34: {
            Sig = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 18: {
            if (signDoc_ == null) {
              SignDoc = new global::Cosmos.Tx.V1beta1.SignDocDirectAux();
            }
            input.ReadMessage(SignDoc);
            break;
          }
          case 24: {
            Mode = (global::Cosmos.Tx.Signing.V1beta1.SignMode) input.ReadEnum();
            break;
          }
          case 34: {
            Sig = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
